import{c as Se,g as xe,a as be,o as he,s as Fe,d as Ye,l as jr,b as qr,e as Mr,f as Br}from"../../../assets/js/cache-images.iaijA35r.js";var Wr={exports:{}};(function(e,t){(function(r,o){o(e)})(typeof globalThis<"u"?globalThis:typeof self<"u"?self:Se,function(r){var o,s;if(!((s=(o=globalThis.chrome)==null?void 0:o.runtime)!=null&&s.id))throw new Error("This script should only be loaded in a browser extension.");if(typeof globalThis.browser>"u"||Object.getPrototypeOf(globalThis.browser)!==Object.prototype){const i="The message port closed before a response was received.",a=g=>{const h={alarms:{clear:{minArgs:0,maxArgs:1},clearAll:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getAll:{minArgs:0,maxArgs:0}},bookmarks:{create:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},getChildren:{minArgs:1,maxArgs:1},getRecent:{minArgs:1,maxArgs:1},getSubTree:{minArgs:1,maxArgs:1},getTree:{minArgs:0,maxArgs:0},move:{minArgs:2,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeTree:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}},browserAction:{disable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},enable:{minArgs:0,maxArgs:1,fallbackToNoCallback:!0},getBadgeBackgroundColor:{minArgs:1,maxArgs:1},getBadgeText:{minArgs:1,maxArgs:1},getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},openPopup:{minArgs:0,maxArgs:0},setBadgeBackgroundColor:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setBadgeText:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},browsingData:{remove:{minArgs:2,maxArgs:2},removeCache:{minArgs:1,maxArgs:1},removeCookies:{minArgs:1,maxArgs:1},removeDownloads:{minArgs:1,maxArgs:1},removeFormData:{minArgs:1,maxArgs:1},removeHistory:{minArgs:1,maxArgs:1},removeLocalStorage:{minArgs:1,maxArgs:1},removePasswords:{minArgs:1,maxArgs:1},removePluginData:{minArgs:1,maxArgs:1},settings:{minArgs:0,maxArgs:0}},commands:{getAll:{minArgs:0,maxArgs:0}},contextMenus:{remove:{minArgs:1,maxArgs:1},removeAll:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},cookies:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:1,maxArgs:1},getAllCookieStores:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},devtools:{inspectedWindow:{eval:{minArgs:1,maxArgs:2,singleCallbackArg:!1}},panels:{create:{minArgs:3,maxArgs:3,singleCallbackArg:!0},elements:{createSidebarPane:{minArgs:1,maxArgs:1}}}},downloads:{cancel:{minArgs:1,maxArgs:1},download:{minArgs:1,maxArgs:1},erase:{minArgs:1,maxArgs:1},getFileIcon:{minArgs:1,maxArgs:2},open:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},pause:{minArgs:1,maxArgs:1},removeFile:{minArgs:1,maxArgs:1},resume:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},extension:{isAllowedFileSchemeAccess:{minArgs:0,maxArgs:0},isAllowedIncognitoAccess:{minArgs:0,maxArgs:0}},history:{addUrl:{minArgs:1,maxArgs:1},deleteAll:{minArgs:0,maxArgs:0},deleteRange:{minArgs:1,maxArgs:1},deleteUrl:{minArgs:1,maxArgs:1},getVisits:{minArgs:1,maxArgs:1},search:{minArgs:1,maxArgs:1}},i18n:{detectLanguage:{minArgs:1,maxArgs:1},getAcceptLanguages:{minArgs:0,maxArgs:0}},identity:{launchWebAuthFlow:{minArgs:1,maxArgs:1}},idle:{queryState:{minArgs:1,maxArgs:1}},management:{get:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},getSelf:{minArgs:0,maxArgs:0},setEnabled:{minArgs:2,maxArgs:2},uninstallSelf:{minArgs:0,maxArgs:1}},notifications:{clear:{minArgs:1,maxArgs:1},create:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:0},getPermissionLevel:{minArgs:0,maxArgs:0},update:{minArgs:2,maxArgs:2}},pageAction:{getPopup:{minArgs:1,maxArgs:1},getTitle:{minArgs:1,maxArgs:1},hide:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setIcon:{minArgs:1,maxArgs:1},setPopup:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},setTitle:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0},show:{minArgs:1,maxArgs:1,fallbackToNoCallback:!0}},permissions:{contains:{minArgs:1,maxArgs:1},getAll:{minArgs:0,maxArgs:0},remove:{minArgs:1,maxArgs:1},request:{minArgs:1,maxArgs:1}},runtime:{getBackgroundPage:{minArgs:0,maxArgs:0},getPlatformInfo:{minArgs:0,maxArgs:0},openOptionsPage:{minArgs:0,maxArgs:0},requestUpdateCheck:{minArgs:0,maxArgs:0},sendMessage:{minArgs:1,maxArgs:3},sendNativeMessage:{minArgs:2,maxArgs:2},setUninstallURL:{minArgs:1,maxArgs:1}},sessions:{getDevices:{minArgs:0,maxArgs:1},getRecentlyClosed:{minArgs:0,maxArgs:1},restore:{minArgs:0,maxArgs:1}},storage:{local:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}},managed:{get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1}},sync:{clear:{minArgs:0,maxArgs:0},get:{minArgs:0,maxArgs:1},getBytesInUse:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}}},tabs:{captureVisibleTab:{minArgs:0,maxArgs:2},create:{minArgs:1,maxArgs:1},detectLanguage:{minArgs:0,maxArgs:1},discard:{minArgs:0,maxArgs:1},duplicate:{minArgs:1,maxArgs:1},executeScript:{minArgs:1,maxArgs:2},get:{minArgs:1,maxArgs:1},getCurrent:{minArgs:0,maxArgs:0},getZoom:{minArgs:0,maxArgs:1},getZoomSettings:{minArgs:0,maxArgs:1},goBack:{minArgs:0,maxArgs:1},goForward:{minArgs:0,maxArgs:1},highlight:{minArgs:1,maxArgs:1},insertCSS:{minArgs:1,maxArgs:2},move:{minArgs:2,maxArgs:2},query:{minArgs:1,maxArgs:1},reload:{minArgs:0,maxArgs:2},remove:{minArgs:1,maxArgs:1},removeCSS:{minArgs:1,maxArgs:2},sendMessage:{minArgs:2,maxArgs:3},setZoom:{minArgs:1,maxArgs:2},setZoomSettings:{minArgs:1,maxArgs:2},update:{minArgs:1,maxArgs:2}},topSites:{get:{minArgs:0,maxArgs:0}},webNavigation:{getAllFrames:{minArgs:1,maxArgs:1},getFrame:{minArgs:1,maxArgs:1}},webRequest:{handlerBehaviorChanged:{minArgs:0,maxArgs:0}},windows:{create:{minArgs:0,maxArgs:1},get:{minArgs:1,maxArgs:2},getAll:{minArgs:0,maxArgs:1},getCurrent:{minArgs:0,maxArgs:1},getLastFocused:{minArgs:0,maxArgs:1},remove:{minArgs:1,maxArgs:1},update:{minArgs:2,maxArgs:2}}};if(Object.keys(h).length===0)throw new Error("api-metadata.json has not been included in browser-polyfill");class A extends WeakMap{constructor(O,G=void 0){super(G),this.createItem=O}get(O){return this.has(O)||this.set(O,this.createItem(O)),super.get(O)}}const y=v=>v&&typeof v=="object"&&typeof v.then=="function",S=(v,O)=>(...G)=>{g.runtime.lastError?v.reject(new Error(g.runtime.lastError.message)):O.singleCallbackArg||G.length<=1&&O.singleCallbackArg!==!1?v.resolve(G[0]):v.resolve(G)},L=v=>v==1?"argument":"arguments",j=(v,O)=>function(w,...x){if(x.length<O.minArgs)throw new Error(`Expected at least ${O.minArgs} ${L(O.minArgs)} for ${v}(), got ${x.length}`);if(x.length>O.maxArgs)throw new Error(`Expected at most ${O.maxArgs} ${L(O.maxArgs)} for ${v}(), got ${x.length}`);return new Promise((N,b)=>{if(O.fallbackToNoCallback)try{w[v](...x,S({resolve:N,reject:b},O))}catch(d){console.warn(`${v} API method doesn't seem to support the callback parameter, falling back to call it without a callback: `,d),w[v](...x),O.fallbackToNoCallback=!1,O.noCallback=!0,N()}else O.noCallback?(w[v](...x),N()):w[v](...x,S({resolve:N,reject:b},O))})},B=(v,O,G)=>new Proxy(O,{apply(w,x,N){return G.call(x,v,...N)}});let W=Function.call.bind(Object.prototype.hasOwnProperty);const $=(v,O={},G={})=>{let w=Object.create(null),x={has(b,d){return d in v||d in w},get(b,d,m){if(d in w)return w[d];if(!(d in v))return;let T=v[d];if(typeof T=="function")if(typeof O[d]=="function")T=B(v,v[d],O[d]);else if(W(G,d)){let _=j(d,G[d]);T=B(v,v[d],_)}else T=T.bind(v);else if(typeof T=="object"&&T!==null&&(W(O,d)||W(G,d)))T=$(T,O[d],G[d]);else if(W(G,"*"))T=$(T,O[d],G["*"]);else return Object.defineProperty(w,d,{configurable:!0,enumerable:!0,get(){return v[d]},set(_){v[d]=_}}),T;return w[d]=T,T},set(b,d,m,T){return d in w?w[d]=m:v[d]=m,!0},defineProperty(b,d,m){return Reflect.defineProperty(w,d,m)},deleteProperty(b,d){return Reflect.deleteProperty(w,d)}},N=Object.create(v);return new Proxy(N,x)},D=v=>({addListener(O,G,...w){O.addListener(v.get(G),...w)},hasListener(O,G){return O.hasListener(v.get(G))},removeListener(O,G){O.removeListener(v.get(G))}}),U=new A(v=>typeof v!="function"?v:function(G){const w=$(G,{},{getContent:{minArgs:0,maxArgs:0}});v(w)}),V=new A(v=>typeof v!="function"?v:function(G,w,x){let N=!1,b,d=new Promise(R=>{b=function(P){N=!0,R(P)}}),m;try{m=v(G,w,b)}catch(R){m=Promise.reject(R)}const T=m!==!0&&y(m);if(m!==!0&&!T&&!N)return!1;const _=R=>{R.then(P=>{x(P)},P=>{let F;P&&(P instanceof Error||typeof P.message=="string")?F=P.message:F="An unexpected error occurred",x({__mozWebExtensionPolyfillReject__:!0,message:F})}).catch(P=>{console.error("Failed to send onMessage rejected reply",P)})};return _(T?m:d),!0}),oe=({reject:v,resolve:O},G)=>{g.runtime.lastError?g.runtime.lastError.message===i?O():v(new Error(g.runtime.lastError.message)):G&&G.__mozWebExtensionPolyfillReject__?v(new Error(G.message)):O(G)},X=(v,O,G,...w)=>{if(w.length<O.minArgs)throw new Error(`Expected at least ${O.minArgs} ${L(O.minArgs)} for ${v}(), got ${w.length}`);if(w.length>O.maxArgs)throw new Error(`Expected at most ${O.maxArgs} ${L(O.maxArgs)} for ${v}(), got ${w.length}`);return new Promise((x,N)=>{const b=oe.bind(null,{resolve:x,reject:N});w.push(b),G.sendMessage(...w)})},H={devtools:{network:{onRequestFinished:D(U)}},runtime:{onMessage:D(V),onMessageExternal:D(V),sendMessage:X.bind(null,"sendMessage",{minArgs:1,maxArgs:3})},tabs:{sendMessage:X.bind(null,"sendMessage",{minArgs:2,maxArgs:3})}},Z={clear:{minArgs:1,maxArgs:1},get:{minArgs:1,maxArgs:1},set:{minArgs:1,maxArgs:1}};return h.privacy={network:{"*":Z},services:{"*":Z},websites:{"*":Z}},$(g,H,h)};r.exports=a(chrome)}else r.exports=globalThis.browser})})(Wr);var jt={exports:{}};(function(e,t){(function(r,o){e.exports=o()})(Se,function(){var r=1e3,o=6e4,s=36e5,i="millisecond",a="second",g="minute",h="hour",A="day",y="week",S="month",L="quarter",j="year",B="date",W="Invalid Date",$=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,D=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,U={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(b){var d=["th","st","nd","rd"],m=b%100;return"["+b+(d[(m-20)%10]||d[m]||d[0])+"]"}},V=function(b,d,m){var T=String(b);return!T||T.length>=d?b:""+Array(d+1-T.length).join(m)+b},oe={s:V,z:function(b){var d=-b.utcOffset(),m=Math.abs(d),T=Math.floor(m/60),_=m%60;return(d<=0?"+":"-")+V(T,2,"0")+":"+V(_,2,"0")},m:function b(d,m){if(d.date()<m.date())return-b(m,d);var T=12*(m.year()-d.year())+(m.month()-d.month()),_=d.clone().add(T,S),R=m-_<0,P=d.clone().add(T+(R?-1:1),S);return+(-(T+(m-_)/(R?_-P:P-_))||0)},a:function(b){return b<0?Math.ceil(b)||0:Math.floor(b)},p:function(b){return{M:S,y:j,w:y,d:A,D:B,h,m:g,s:a,ms:i,Q:L}[b]||String(b||"").toLowerCase().replace(/s$/,"")},u:function(b){return b===void 0}},X="en",H={};H[X]=U;var Z="$isDayjsObject",v=function(b){return b instanceof x||!(!b||!b[Z])},O=function b(d,m,T){var _;if(!d)return X;if(typeof d=="string"){var R=d.toLowerCase();H[R]&&(_=R),m&&(H[R]=m,_=R);var P=d.split("-");if(!_&&P.length>1)return b(P[0])}else{var F=d.name;H[F]=d,_=F}return!T&&_&&(X=_),_||!T&&X},G=function(b,d){if(v(b))return b.clone();var m=typeof d=="object"?d:{};return m.date=b,m.args=arguments,new x(m)},w=oe;w.l=O,w.i=v,w.w=function(b,d){return G(b,{locale:d.$L,utc:d.$u,x:d.$x,$offset:d.$offset})};var x=function(){function b(m){this.$L=O(m.locale,null,!0),this.parse(m),this.$x=this.$x||m.x||{},this[Z]=!0}var d=b.prototype;return d.parse=function(m){this.$d=function(T){var _=T.date,R=T.utc;if(_===null)return new Date(NaN);if(w.u(_))return new Date;if(_ instanceof Date)return new Date(_);if(typeof _=="string"&&!/Z$/i.test(_)){var P=_.match($);if(P){var F=P[2]-1||0,I=(P[7]||"0").substring(0,3);return R?new Date(Date.UTC(P[1],F,P[3]||1,P[4]||0,P[5]||0,P[6]||0,I)):new Date(P[1],F,P[3]||1,P[4]||0,P[5]||0,P[6]||0,I)}}return new Date(_)}(m),this.init()},d.init=function(){var m=this.$d;this.$y=m.getFullYear(),this.$M=m.getMonth(),this.$D=m.getDate(),this.$W=m.getDay(),this.$H=m.getHours(),this.$m=m.getMinutes(),this.$s=m.getSeconds(),this.$ms=m.getMilliseconds()},d.$utils=function(){return w},d.isValid=function(){return this.$d.toString()!==W},d.isSame=function(m,T){var _=G(m);return this.startOf(T)<=_&&_<=this.endOf(T)},d.isAfter=function(m,T){return G(m)<this.startOf(T)},d.isBefore=function(m,T){return this.endOf(T)<G(m)},d.$g=function(m,T,_){return w.u(m)?this[T]:this.set(_,m)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(m,T){var _=this,R=!!w.u(T)||T,P=w.p(m),F=function(ie,z){var ee=w.w(_.$u?Date.UTC(_.$y,z,ie):new Date(_.$y,z,ie),_);return R?ee:ee.endOf(A)},I=function(ie,z){return w.w(_.toDate()[ie].apply(_.toDate("s"),(R?[0,0,0,0]:[23,59,59,999]).slice(z)),_)},q=this.$W,M=this.$M,Q=this.$D,ne="set"+(this.$u?"UTC":"");switch(P){case j:return R?F(1,0):F(31,11);case S:return R?F(1,M):F(0,M+1);case y:var te=this.$locale().weekStart||0,re=(q<te?q+7:q)-te;return F(R?Q-re:Q+(6-re),M);case A:case B:return I(ne+"Hours",0);case h:return I(ne+"Minutes",1);case g:return I(ne+"Seconds",2);case a:return I(ne+"Milliseconds",3);default:return this.clone()}},d.endOf=function(m){return this.startOf(m,!1)},d.$set=function(m,T){var _,R=w.p(m),P="set"+(this.$u?"UTC":""),F=(_={},_[A]=P+"Date",_[B]=P+"Date",_[S]=P+"Month",_[j]=P+"FullYear",_[h]=P+"Hours",_[g]=P+"Minutes",_[a]=P+"Seconds",_[i]=P+"Milliseconds",_)[R],I=R===A?this.$D+(T-this.$W):T;if(R===S||R===j){var q=this.clone().set(B,1);q.$d[F](I),q.init(),this.$d=q.set(B,Math.min(this.$D,q.daysInMonth())).$d}else F&&this.$d[F](I);return this.init(),this},d.set=function(m,T){return this.clone().$set(m,T)},d.get=function(m){return this[w.p(m)]()},d.add=function(m,T){var _,R=this;m=Number(m);var P=w.p(T),F=function(M){var Q=G(R);return w.w(Q.date(Q.date()+Math.round(M*m)),R)};if(P===S)return this.set(S,this.$M+m);if(P===j)return this.set(j,this.$y+m);if(P===A)return F(1);if(P===y)return F(7);var I=(_={},_[g]=o,_[h]=s,_[a]=r,_)[P]||1,q=this.$d.getTime()+m*I;return w.w(q,this)},d.subtract=function(m,T){return this.add(-1*m,T)},d.format=function(m){var T=this,_=this.$locale();if(!this.isValid())return _.invalidDate||W;var R=m||"YYYY-MM-DDTHH:mm:ssZ",P=w.z(this),F=this.$H,I=this.$m,q=this.$M,M=_.weekdays,Q=_.months,ne=_.meridiem,te=function(z,ee,ce,fe){return z&&(z[ee]||z(T,R))||ce[ee].slice(0,fe)},re=function(z){return w.s(F%12||12,z,"0")},ie=ne||function(z,ee,ce){var fe=z<12?"AM":"PM";return ce?fe.toLowerCase():fe};return R.replace(D,function(z,ee){return ee||function(ce){switch(ce){case"YY":return String(T.$y).slice(-2);case"YYYY":return w.s(T.$y,4,"0");case"M":return q+1;case"MM":return w.s(q+1,2,"0");case"MMM":return te(_.monthsShort,q,Q,3);case"MMMM":return te(Q,q);case"D":return T.$D;case"DD":return w.s(T.$D,2,"0");case"d":return String(T.$W);case"dd":return te(_.weekdaysMin,T.$W,M,2);case"ddd":return te(_.weekdaysShort,T.$W,M,3);case"dddd":return M[T.$W];case"H":return String(F);case"HH":return w.s(F,2,"0");case"h":return re(1);case"hh":return re(2);case"a":return ie(F,I,!0);case"A":return ie(F,I,!1);case"m":return String(I);case"mm":return w.s(I,2,"0");case"s":return String(T.$s);case"ss":return w.s(T.$s,2,"0");case"SSS":return w.s(T.$ms,3,"0");case"Z":return P}return null}(z)||P.replace(":","")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(m,T,_){var R,P=this,F=w.p(T),I=G(m),q=(I.utcOffset()-this.utcOffset())*o,M=this-I,Q=function(){return w.m(P,I)};switch(F){case j:R=Q()/12;break;case S:R=Q();break;case L:R=Q()/3;break;case y:R=(M-q)/6048e5;break;case A:R=(M-q)/864e5;break;case h:R=M/s;break;case g:R=M/o;break;case a:R=M/r;break;default:R=M}return _?R:w.a(R)},d.daysInMonth=function(){return this.endOf(S).$D},d.$locale=function(){return H[this.$L]},d.locale=function(m,T){if(!m)return this.$L;var _=this.clone(),R=O(m,T,!0);return R&&(_.$L=R),_},d.clone=function(){return w.w(this.$d,this)},d.toDate=function(){return new Date(this.valueOf())},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},b}(),N=x.prototype;return G.prototype=N,[["$ms",i],["$s",a],["$m",g],["$H",h],["$W",A],["$M",S],["$y",j],["$D",B]].forEach(function(b){N[b[1]]=function(d){return this.$g(d,b[0],b[1])}}),G.extend=function(b,d){return b.$i||(b(d,x,G),b.$i=!0),G},G.locale=O,G.isDayjs=v,G.unix=function(b){return G(1e3*b)},G.en=H[X],G.Ls=H,G.p={},G})})(jt);var Hr=jt.exports;const Ae=xe(Hr);function ue(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}const Nr=Object.freeze(Object.defineProperty({__proto__:null,getUserAgent:ue},Symbol.toStringTag,{value:"Module"}));var Ie={exports:{}},Vr=qt;function qt(e,t,r,o){if(typeof r!="function")throw new Error("method for before hook must be a function");return o||(o={}),Array.isArray(t)?t.reverse().reduce(function(s,i){return qt.bind(null,e,i,s,o)},r)():Promise.resolve().then(function(){return e.registry[t]?e.registry[t].reduce(function(s,i){return i.hook.bind(null,s,o)},r)():r(o)})}var zr=Kr;function Kr(e,t,r,o){var s=o;e.registry[r]||(e.registry[r]=[]),t==="before"&&(o=function(i,a){return Promise.resolve().then(s.bind(null,a)).then(i.bind(null,a))}),t==="after"&&(o=function(i,a){var g;return Promise.resolve().then(i.bind(null,a)).then(function(h){return g=h,s(g,a)}).then(function(){return g})}),t==="error"&&(o=function(i,a){return Promise.resolve().then(i.bind(null,a)).catch(function(g){return s(g,a)})}),e.registry[r].push({hook:o,orig:s})}var Yr=Jr;function Jr(e,t,r){if(e.registry[t]){var o=e.registry[t].map(function(s){return s.orig}).indexOf(r);o!==-1&&e.registry[t].splice(o,1)}}var Mt=Vr,Qr=zr,Xr=Yr,_t=Function.bind,Et=_t.bind(_t);function Bt(e,t,r){var o=Et(Xr,null).apply(null,r?[t,r]:[t]);e.api={remove:o},e.remove=o,["before","error","after","wrap"].forEach(function(s){var i=r?[t,s,r]:[t,s];e[s]=e.api[s]=Et(Qr,null).apply(null,i)})}function Zr(){var e="h",t={registry:{}},r=Mt.bind(null,t,e);return Bt(r,t,e),r}function Wt(){var e={registry:{}},t=Mt.bind(null,e);return Bt(t,e),t}var wt=!1;function ye(){return wt||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),wt=!0),Wt()}ye.Singular=Zr.bind();ye.Collection=Wt.bind();Ie.exports=ye;Ie.exports.Hook=ye;Ie.exports.Singular=ye.Singular;var es=Ie.exports.Collection=ye.Collection,ts="9.0.4",rs=`octokit-endpoint.js/${ts} ${ue()}`,ss={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":rs},mediaType:{format:""}};function os(e){return e?Object.keys(e).reduce((t,r)=>(t[r.toLowerCase()]=e[r],t),{}):{}}function ns(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const t=Object.getPrototypeOf(e);if(t===null)return!0;const r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}function Ht(e,t){const r=Object.assign({},e);return Object.keys(t).forEach(o=>{ns(t[o])?o in e?r[o]=Ht(e[o],t[o]):Object.assign(r,{[o]:t[o]}):Object.assign(r,{[o]:t[o]})}),r}function bt(e){for(const t in e)e[t]===void 0&&delete e[t];return e}function Je(e,t,r){var s;if(typeof t=="string"){let[i,a]=t.split(" ");r=Object.assign(a?{method:i,url:a}:{url:i},r)}else r=Object.assign({},t);r.headers=os(r.headers),bt(r),bt(r.headers);const o=Ht(e||{},r);return r.url==="/graphql"&&(e&&((s=e.mediaType.previews)!=null&&s.length)&&(o.mediaType.previews=e.mediaType.previews.filter(i=>!o.mediaType.previews.includes(i)).concat(o.mediaType.previews)),o.mediaType.previews=(o.mediaType.previews||[]).map(i=>i.replace(/-preview/,""))),o}function is(e,t){const r=/\?/.test(e)?"&":"?",o=Object.keys(t);return o.length===0?e:e+r+o.map(s=>s==="q"?"q="+t.q.split("+").map(encodeURIComponent).join("+"):`${s}=${encodeURIComponent(t[s])}`).join("&")}var as=/\{[^}]+\}/g;function cs(e){return e.replace(/^\W+|\W+$/g,"").split(/,/)}function us(e){const t=e.match(as);return t?t.map(cs).reduce((r,o)=>r.concat(o),[]):[]}function yt(e,t){const r={__proto__:null};for(const o of Object.keys(e))t.indexOf(o)===-1&&(r[o]=e[o]);return r}function Nt(e){return e.split(/(%[0-9A-Fa-f]{2})/g).map(function(t){return/%[0-9A-Fa-f]/.test(t)||(t=encodeURI(t).replace(/%5B/g,"[").replace(/%5D/g,"]")),t}).join("")}function _e(e){return encodeURIComponent(e).replace(/[!'()*]/g,function(t){return"%"+t.charCodeAt(0).toString(16).toUpperCase()})}function ke(e,t,r){return t=e==="+"||e==="#"?Nt(t):_e(t),r?_e(r)+"="+t:t}function Te(e){return e!=null}function Ne(e){return e===";"||e==="&"||e==="?"}function ls(e,t,r,o){var s=e[r],i=[];if(Te(s)&&s!=="")if(typeof s=="string"||typeof s=="number"||typeof s=="boolean")s=s.toString(),o&&o!=="*"&&(s=s.substring(0,parseInt(o,10))),i.push(ke(t,s,Ne(t)?r:""));else if(o==="*")Array.isArray(s)?s.filter(Te).forEach(function(a){i.push(ke(t,a,Ne(t)?r:""))}):Object.keys(s).forEach(function(a){Te(s[a])&&i.push(ke(t,s[a],a))});else{const a=[];Array.isArray(s)?s.filter(Te).forEach(function(g){a.push(ke(t,g))}):Object.keys(s).forEach(function(g){Te(s[g])&&(a.push(_e(g)),a.push(ke(t,s[g].toString())))}),Ne(t)?i.push(_e(r)+"="+a.join(",")):a.length!==0&&i.push(a.join(","))}else t===";"?Te(s)&&i.push(_e(r)):s===""&&(t==="&"||t==="?")?i.push(_e(r)+"="):s===""&&i.push("");return i}function ps(e){return{expand:ds.bind(null,e)}}function ds(e,t){var r=["+","#",".","/",";","?","&"];return e=e.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(o,s,i){if(s){let g="";const h=[];if(r.indexOf(s.charAt(0))!==-1&&(g=s.charAt(0),s=s.substr(1)),s.split(/,/g).forEach(function(A){var y=/([^:\*]*)(?::(\d+)|(\*))?/.exec(A);h.push(ls(t,g,y[1],y[2]||y[3]))}),g&&g!=="+"){var a=",";return g==="?"?a="&":g!=="#"&&(a=g),(h.length!==0?g:"")+h.join(a)}else return h.join(",")}else return Nt(i)}),e==="/"?e:e.replace(/\/$/,"")}function Vt(e){var y;let t=e.method.toUpperCase(),r=(e.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),o=Object.assign({},e.headers),s,i=yt(e,["method","baseUrl","url","headers","request","mediaType"]);const a=us(r);r=ps(r).expand(i),/^http/.test(r)||(r=e.baseUrl+r);const g=Object.keys(e).filter(S=>a.includes(S)).concat("baseUrl"),h=yt(i,g);if(!/application\/octet-stream/i.test(o.accept)&&(e.mediaType.format&&(o.accept=o.accept.split(/,/).map(S=>S.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${e.mediaType.format}`)).join(",")),r.endsWith("/graphql")&&(y=e.mediaType.previews)!=null&&y.length)){const S=o.accept.match(/[\w-]+(?=-preview)/g)||[];o.accept=S.concat(e.mediaType.previews).map(L=>{const j=e.mediaType.format?`.${e.mediaType.format}`:"+json";return`application/vnd.github.${L}-preview${j}`}).join(",")}return["GET","HEAD"].includes(t)?r=is(r,h):"data"in h?s=h.data:Object.keys(h).length&&(s=h),!o["content-type"]&&typeof s<"u"&&(o["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(t)&&typeof s>"u"&&(s=""),Object.assign({method:t,url:r,headers:o},typeof s<"u"?{body:s}:null,e.request?{request:e.request}:null)}function gs(e,t,r){return Vt(Je(e,t,r))}function zt(e,t){const r=Je(e,t),o=gs.bind(null,r);return Object.assign(o,{DEFAULTS:r,defaults:zt.bind(null,r),merge:Je.bind(null,r),parse:Vt})}var hs=zt(null,ss);class vt extends Error{constructor(t){super(t),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var rt={exports:{}},ms=Kt;function Kt(e,t){if(e&&t)return Kt(e)(t);if(typeof e!="function")throw new TypeError("need wrapper function");return Object.keys(e).forEach(function(o){r[o]=e[o]}),r;function r(){for(var o=new Array(arguments.length),s=0;s<o.length;s++)o[s]=arguments[s];var i=e.apply(this,o),a=o[o.length-1];return typeof i=="function"&&i!==a&&Object.keys(a).forEach(function(g){i[g]=a[g]}),i}}var Yt=ms;rt.exports=Yt(Ue);rt.exports.strict=Yt(Jt);Ue.proto=Ue(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return Ue(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return Jt(this)},configurable:!0})});function Ue(e){var t=function(){return t.called?t.value:(t.called=!0,t.value=e.apply(this,arguments))};return t.called=!1,t}function Jt(e){var t=function(){if(t.called)throw new Error(t.onceError);return t.called=!0,t.value=e.apply(this,arguments)},r=e.name||"Function wrapped with `once`";return t.onceError=r+" shouldn't be called more than once",t.called=!1,t}var fs=rt.exports;const Qt=xe(fs);var Ts=Qt(e=>console.warn(e)),_s=Qt(e=>console.warn(e)),de=class extends Error{constructor(e,t,r){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=t;let o;"headers"in r&&typeof r.headers<"u"&&(o=r.headers),"response"in r&&(this.response=r.response,o=r.response.headers);const s=Object.assign({},r.request);r.request.headers.authorization&&(s.headers=Object.assign({},r.request.headers,{authorization:r.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),s.url=s.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=s,Object.defineProperty(this,"code",{get(){return Ts(new vt("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),t}}),Object.defineProperty(this,"headers",{get(){return _s(new vt("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),o||{}}})}},Es="8.2.0";function ws(e){if(typeof e!="object"||e===null||Object.prototype.toString.call(e)!=="[object Object]")return!1;const t=Object.getPrototypeOf(e);if(t===null)return!0;const r=Object.prototype.hasOwnProperty.call(t,"constructor")&&t.constructor;return typeof r=="function"&&r instanceof r&&Function.prototype.call(r)===Function.prototype.call(e)}function bs(e){return e.arrayBuffer()}function kt(e){var g,h,A;const t=e.request&&e.request.log?e.request.log:console,r=((g=e.request)==null?void 0:g.parseSuccessResponseBody)!==!1;(ws(e.body)||Array.isArray(e.body))&&(e.body=JSON.stringify(e.body));let o={},s,i,{fetch:a}=globalThis;if((h=e.request)!=null&&h.fetch&&(a=e.request.fetch),!a)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return a(e.url,{method:e.method,body:e.body,headers:e.headers,signal:(A=e.request)==null?void 0:A.signal,...e.body&&{duplex:"half"}}).then(async y=>{i=y.url,s=y.status;for(const S of y.headers)o[S[0]]=S[1];if("deprecation"in o){const S=o.link&&o.link.match(/<([^>]+)>; rel="deprecation"/),L=S&&S.pop();t.warn(`[@octokit/request] "${e.method} ${e.url}" is deprecated. It is scheduled to be removed on ${o.sunset}${L?`. See ${L}`:""}`)}if(!(s===204||s===205)){if(e.method==="HEAD"){if(s<400)return;throw new de(y.statusText,s,{response:{url:i,status:s,headers:o,data:void 0},request:e})}if(s===304)throw new de("Not modified",s,{response:{url:i,status:s,headers:o,data:await Ve(y)},request:e});if(s>=400){const S=await Ve(y);throw new de(ys(S),s,{response:{url:i,status:s,headers:o,data:S},request:e})}return r?await Ve(y):y.body}}).then(y=>({status:s,url:i,headers:o,data:y})).catch(y=>{if(y instanceof de)throw y;if(y.name==="AbortError")throw y;let S=y.message;throw y.name==="TypeError"&&"cause"in y&&(y.cause instanceof Error?S=y.cause.message:typeof y.cause=="string"&&(S=y.cause)),new de(S,500,{request:e})})}async function Ve(e){const t=e.headers.get("content-type");return/application\/json/.test(t)?e.json().catch(()=>e.text()).catch(()=>""):!t||/^text\/|charset=utf-8$/.test(t)?e.text():bs(e)}function ys(e){if(typeof e=="string")return e;let t;return"documentation_url"in e?t=` - ${e.documentation_url}`:t="","message"in e?Array.isArray(e.errors)?`${e.message}: ${e.errors.map(JSON.stringify).join(", ")}${t}`:`${e.message}${t}`:`Unknown error: ${JSON.stringify(e)}`}function Qe(e,t){const r=e.defaults(t);return Object.assign(function(s,i){const a=r.merge(s,i);if(!a.request||!a.request.hook)return kt(r.parse(a));const g=(h,A)=>kt(r.parse(r.merge(h,A)));return Object.assign(g,{endpoint:r,defaults:Qe.bind(null,r)}),a.request.hook(g,a)},{endpoint:r,defaults:Qe.bind(null,r)})}var J=Qe(hs,{headers:{"user-agent":`octokit-request.js/${Es} ${ue()}`}}),vs="7.0.2";function ks(e){return`Request failed due to following response errors:
`+e.errors.map(t=>` - ${t.message}`).join(`
`)}var As=class extends Error{constructor(e,t,r){super(ks(r)),this.request=e,this.headers=t,this.response=r,this.name="GraphqlResponseError",this.errors=r.errors,this.data=r.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Ss=["method","baseUrl","url","headers","request","query","mediaType"],Os=["query","method","url"],At=/\/api\/v3\/?$/;function Ps(e,t,r){if(r){if(typeof t=="string"&&"query"in r)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const a in r)if(Os.includes(a))return Promise.reject(new Error(`[@octokit/graphql] "${a}" cannot be used as variable name`))}const o=typeof t=="string"?Object.assign({query:t},r):t,s=Object.keys(o).reduce((a,g)=>Ss.includes(g)?(a[g]=o[g],a):(a.variables||(a.variables={}),a.variables[g]=o[g],a),{}),i=o.baseUrl||e.endpoint.DEFAULTS.baseUrl;return At.test(i)&&(s.url=i.replace(At,"/api/graphql")),e(s).then(a=>{if(a.data.errors){const g={};for(const h of Object.keys(a.headers))g[h]=a.headers[h];throw new As(s,g,a.data)}return a.data.data})}function st(e,t){const r=e.defaults(t);return Object.assign((s,i)=>Ps(r,s,i),{defaults:st.bind(null,r),endpoint:r.endpoint})}st(J,{headers:{"user-agent":`octokit-graphql.js/${vs} ${ue()}`},method:"POST",url:"/graphql"});function Gs(e){return st(e,{method:"POST",url:"/graphql"})}var Rs=/^v1\./,Fs=/^ghs_/,Ds=/^ghu_/;async function Cs(e){const t=e.split(/\./).length===3,r=Rs.test(e)||Fs.test(e),o=Ds.test(e);return{type:"token",token:e,tokenType:t?"app":r?"installation":o?"user-to-server":"oauth"}}function Us(e){return e.split(/\./).length===3?`bearer ${e}`:`token ${e}`}async function xs(e,t,r,o){const s=t.endpoint.merge(r,o);return s.headers.authorization=Us(e),t(s)}var Is=function(t){if(!t)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof t!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return t=t.replace(/^(token|bearer) +/i,""),Object.assign(Cs.bind(null,t),{hook:xs.bind(null,t)})},Xt="5.1.0",St=()=>{},$s=console.warn.bind(console),Ls=console.error.bind(console),Ot=`octokit-core.js/${Xt} ${ue()}`,we,Zt=(we=class{static defaults(t){return class extends this{constructor(...o){const s=o[0]||{};if(typeof t=="function"){super(t(s));return}super(Object.assign({},t,s,s.userAgent&&t.userAgent?{userAgent:`${s.userAgent} ${t.userAgent}`}:null))}}}static plugin(...t){var s;const r=this.plugins;return s=class extends this{},s.plugins=r.concat(t.filter(a=>!r.includes(a))),s}constructor(t={}){const r=new es,o={baseUrl:J.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},t.request,{hook:r.bind(null,"request")}),mediaType:{previews:[],format:""}};if(o.headers["user-agent"]=t.userAgent?`${t.userAgent} ${Ot}`:Ot,t.baseUrl&&(o.baseUrl=t.baseUrl),t.previews&&(o.mediaType.previews=t.previews),t.timeZone&&(o.headers["time-zone"]=t.timeZone),this.request=J.defaults(o),this.graphql=Gs(this.request).defaults(o),this.log=Object.assign({debug:St,info:St,warn:$s,error:Ls},t.log),this.hook=r,t.authStrategy){const{authStrategy:i,...a}=t,g=i(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:a},t.auth));r.wrap("request",g.hook),this.auth=g}else if(!t.auth)this.auth=async()=>({type:"unauthenticated"});else{const i=Is(t.auth);r.wrap("request",i.hook),this.auth=i}const s=this.constructor;for(let i=0;i<s.plugins.length;++i)Object.assign(this,s.plugins[i](this,t))}},we.VERSION=Xt,we.plugins=[],we);const js=Object.freeze(Object.defineProperty({__proto__:null,Octokit:Zt},Symbol.toStringTag,{value:"Module"}));var qs="9.1.5";function Ms(e){if(!e.data)return{...e,data:[]};if(!("total_count"in e.data&&!("url"in e.data)))return e;const r=e.data.incomplete_results,o=e.data.repository_selection,s=e.data.total_count;delete e.data.incomplete_results,delete e.data.repository_selection,delete e.data.total_count;const i=Object.keys(e.data)[0],a=e.data[i];return e.data=a,typeof r<"u"&&(e.data.incomplete_results=r),typeof o<"u"&&(e.data.repository_selection=o),e.data.total_count=s,e}function ot(e,t,r){const o=typeof t=="function"?t.endpoint(r):e.request.endpoint(t,r),s=typeof t=="function"?t:e.request,i=o.method,a=o.headers;let g=o.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!g)return{done:!0};try{const h=await s({method:i,url:g,headers:a}),A=Ms(h);return g=((A.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:A}}catch(h){if(h.status!==409)throw h;return g="",{value:{status:200,headers:{},data:[]}}}}})}}function er(e,t,r,o){return typeof r=="function"&&(o=r,r=void 0),tr(e,[],ot(e,t,r)[Symbol.asyncIterator](),o)}function tr(e,t,r,o){return r.next().then(s=>{if(s.done)return t;let i=!1;function a(){i=!0}return t=t.concat(o?o(s.value,a):s.value.data),i?t:tr(e,t,r,o)})}Object.assign(er,{iterator:ot});function rr(e){return{paginate:Object.assign(er.bind(null,e),{iterator:ot.bind(null,e)})}}rr.VERSION=qs;var Bs=(e,t)=>`The cursor at "${e.join(",")}" did not change its value "${t}" after a page transition. Please make sure your that your query is set up correctly.`,Ws=class extends Error{constructor(e,t){super(Bs(e.pathInQuery,t)),this.pageInfo=e,this.cursorValue=t,this.name="MissingCursorChangeError",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Hs=class extends Error{constructor(e){super(`No pageInfo property found in response. Please make sure to specify the pageInfo in your query. Response-Data: ${JSON.stringify(e,null,2)}`),this.response=e,this.name="MissingPageInfo",Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Ns=e=>Object.prototype.toString.call(e)==="[object Object]";function sr(e){const t=or(e,"pageInfo");if(t.length===0)throw new Hs(e);return t}var or=(e,t,r=[])=>{for(const o of Object.keys(e)){const s=[...r,o],i=e[o];if(i.hasOwnProperty(t))return s;if(Ns(i)){const a=or(i,t,s);if(a.length>0)return a}}return[]},Oe=(e,t)=>t.reduce((r,o)=>r[o],e),ze=(e,t,r)=>{const o=t[t.length-1],s=[...t].slice(0,-1),i=Oe(e,s);typeof r=="function"?i[o]=r(i[o]):i[o]=r},Vs=e=>{const t=sr(e);return{pathInQuery:t,pageInfo:Oe(e,[...t,"pageInfo"])}},nr=e=>e.hasOwnProperty("hasNextPage"),zs=e=>nr(e)?e.endCursor:e.startCursor,Ks=e=>nr(e)?e.hasNextPage:e.hasPreviousPage,ir=e=>(t,r={})=>{let o=!0,s={...r};return{[Symbol.asyncIterator]:()=>({async next(){if(!o)return{done:!0,value:{}};const i=await e.graphql(t,s),a=Vs(i),g=zs(a.pageInfo);if(o=Ks(a.pageInfo),o&&g===s.cursor)throw new Ws(a,g);return s={...s,cursor:g},{done:!1,value:i}}})}},Ys=(e,t)=>{if(Object.keys(e).length===0)return Object.assign(e,t);const r=sr(e),o=[...r,"nodes"],s=Oe(t,o);s&&ze(e,o,h=>[...h,...s]);const i=[...r,"edges"],a=Oe(t,i);a&&ze(e,i,h=>[...h,...a]);const g=[...r,"pageInfo"];return ze(e,g,Oe(t,g)),e},Js=e=>{const t=ir(e);return async(r,o={})=>{let s={};for await(const i of t(r,o))s=Ys(s,i);return s}};function Qs(e){return e.graphql,{graphql:Object.assign(e.graphql,{paginate:Object.assign(Js(e),{iterator:ir(e)})})}}var Xs="10.3.0",Zs={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repositories/{repository_id}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repositories/{repository_id}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repositories/{repository_id}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repositories/{repository_id}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repositories/{repository_id}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotForBusinessSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotForBusinessSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{cancelImport:["DELETE /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.cancelImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#cancel-an-import"}],deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getCommitAuthors:["GET /repos/{owner}/{repo}/import/authors",{},{deprecated:"octokit.rest.migrations.getCommitAuthors() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-commit-authors"}],getImportStatus:["GET /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.getImportStatus() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-an-import-status"}],getLargeFiles:["GET /repos/{owner}/{repo}/import/large_files",{},{deprecated:"octokit.rest.migrations.getLargeFiles() is deprecated, see https://docs.github.com/rest/migrations/source-imports#get-large-files"}],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],mapCommitAuthor:["PATCH /repos/{owner}/{repo}/import/authors/{author_id}",{},{deprecated:"octokit.rest.migrations.mapCommitAuthor() is deprecated, see https://docs.github.com/rest/migrations/source-imports#map-a-commit-author"}],setLfsPreference:["PATCH /repos/{owner}/{repo}/import/lfs",{},{deprecated:"octokit.rest.migrations.setLfsPreference() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-git-lfs-preference"}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],startImport:["PUT /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.startImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#start-an-import"}],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"],updateImport:["PATCH /repos/{owner}/{repo}/import",{},{deprecated:"octokit.rest.migrations.updateImport() is deprecated, see https://docs.github.com/rest/migrations/source-imports#update-an-import"}]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployment"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},eo=Zs,ge=new Map;for(const[e,t]of Object.entries(eo))for(const[r,o]of Object.entries(t)){const[s,i,a]=o,[g,h]=s.split(/ /),A=Object.assign({method:g,url:h},i);ge.has(e)||ge.set(e,new Map),ge.get(e).set(r,{scope:e,methodName:r,endpointDefaults:A,decorations:a})}var to={has({scope:e},t){return ge.get(e).has(t)},getOwnPropertyDescriptor(e,t){return{value:this.get(e,t),configurable:!0,writable:!0,enumerable:!0}},defineProperty(e,t,r){return Object.defineProperty(e.cache,t,r),!0},deleteProperty(e,t){return delete e.cache[t],!0},ownKeys({scope:e}){return[...ge.get(e).keys()]},set(e,t,r){return e.cache[t]=r},get({octokit:e,scope:t,cache:r},o){if(r[o])return r[o];const s=ge.get(t).get(o);if(!s)return;const{endpointDefaults:i,decorations:a}=s;return a?r[o]=so(e,t,o,i,a):r[o]=e.request.defaults(i),r[o]}};function ro(e){const t={};for(const r of ge.keys())t[r]=new Proxy({octokit:e,scope:r,cache:{}},to);return t}function so(e,t,r,o,s){const i=e.request.defaults(o);function a(...g){let h=i.endpoint.merge(...g);if(s.mapToData)return h=Object.assign({},h,{data:h[s.mapToData],[s.mapToData]:void 0}),i(h);if(s.renamed){const[A,y]=s.renamed;e.log.warn(`octokit.${t}.${r}() has been renamed to octokit.${A}.${y}()`)}if(s.deprecated&&e.log.warn(s.deprecated),s.renamedParameters){const A=i.endpoint.merge(...g);for(const[y,S]of Object.entries(s.renamedParameters))y in A&&(e.log.warn(`"${y}" parameter is deprecated for "octokit.${t}.${r}()". Use "${S}" instead`),S in A||(A[S]=A[y]),delete A[y]);return i(A)}return i(...g)}return Object.assign(a,i)}function ar(e){return{rest:ro(e)}}ar.VERSION=Xs;var cr={exports:{}};(function(e,t){(function(r,o){e.exports=o()})(Se,function(){var r=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof Se<"u"?Se:typeof self<"u"?self:{};function o(k){return k&&k.default||k}var s=function(k,c,n={}){var u,l,p;for(u in c)p=c[u],n[u]=(l=k[u])!=null?l:p;return n},i=function(k,c,n={}){var u,l;for(u in k)l=k[u],c[u]!==void 0&&(n[u]=l);return n},a={load:s,overwrite:i},g;g=class{constructor(c,n){this.incr=c,this.decr=n,this._first=null,this._last=null,this.length=0}push(c){var n;this.length++,typeof this.incr=="function"&&this.incr(),n={value:c,prev:this._last,next:null},this._last!=null?(this._last.next=n,this._last=n):this._first=this._last=n}shift(){var c;if(this._first!=null)return this.length--,typeof this.decr=="function"&&this.decr(),c=this._first.value,(this._first=this._first.next)!=null?this._first.prev=null:this._last=null,c}first(){if(this._first!=null)return this._first.value}getArray(){var c,n,u;for(c=this._first,u=[];c!=null;)u.push((n=c,c=c.next,n.value));return u}forEachShift(c){var n;for(n=this.shift();n!=null;)c(n),n=this.shift()}debug(){var c,n,u,l,p;for(c=this._first,p=[];c!=null;)p.push((n=c,c=c.next,{value:n.value,prev:(u=n.prev)!=null?u.value:void 0,next:(l=n.next)!=null?l.value:void 0}));return p}};var h=g,A;A=class{constructor(c){if(this.instance=c,this._events={},this.instance.on!=null||this.instance.once!=null||this.instance.removeAllListeners!=null)throw new Error("An Emitter already exists for this object");this.instance.on=(n,u)=>this._addListener(n,"many",u),this.instance.once=(n,u)=>this._addListener(n,"once",u),this.instance.removeAllListeners=(n=null)=>n!=null?delete this._events[n]:this._events={}}_addListener(c,n,u){var l;return(l=this._events)[c]==null&&(l[c]=[]),this._events[c].push({cb:u,status:n}),this.instance}listenerCount(c){return this._events[c]!=null?this._events[c].length:0}async trigger(c,...n){var u,l;try{return c!=="debug"&&this.trigger("debug",`Event triggered: ${c}`,n),this._events[c]==null?void 0:(this._events[c]=this._events[c].filter(function(p){return p.status!=="none"}),l=this._events[c].map(async p=>{var f,E;if(p.status!=="none"){p.status==="once"&&(p.status="none");try{return E=typeof p.cb=="function"?p.cb(...n):void 0,typeof(E!=null?E.then:void 0)=="function"?await E:E}catch(C){return f=C,this.trigger("error",f),null}}}),(await Promise.all(l)).find(function(p){return p!=null}))}catch(p){return u=p,this.trigger("error",u),null}}};var y=A,S,L,j;S=h,L=y,j=class{constructor(c){this.Events=new L(this),this._length=0,this._lists=(function(){var n,u,l;for(l=[],n=1,u=c;1<=u?n<=u:n>=u;1<=u?++n:--n)l.push(new S(()=>this.incr(),()=>this.decr()));return l}).call(this)}incr(){if(this._length++===0)return this.Events.trigger("leftzero")}decr(){if(--this._length===0)return this.Events.trigger("zero")}push(c){return this._lists[c.options.priority].push(c)}queued(c){return c!=null?this._lists[c].length:this._length}shiftAll(c){return this._lists.forEach(function(n){return n.forEachShift(c)})}getFirst(c=this._lists){var n,u,l;for(n=0,u=c.length;n<u;n++)if(l=c[n],l.length>0)return l;return[]}shiftLastFrom(c){return this.getFirst(this._lists.slice(c).reverse()).shift()}};var B=j,W;W=class extends Error{};var $=W,D,U,V,oe,X;oe=10,U=5,X=a,D=$,V=class{constructor(c,n,u,l,p,f,E,C){this.task=c,this.args=n,this.rejectOnDrop=p,this.Events=f,this._states=E,this.Promise=C,this.options=X.load(u,l),this.options.priority=this._sanitizePriority(this.options.priority),this.options.id===l.id&&(this.options.id=`${this.options.id}-${this._randomIndex()}`),this.promise=new this.Promise((K,Y)=>{this._resolve=K,this._reject=Y}),this.retryCount=0}_sanitizePriority(c){var n;return n=~~c!==c?U:c,n<0?0:n>oe-1?oe-1:n}_randomIndex(){return Math.random().toString(36).slice(2)}doDrop({error:c,message:n="This job has been dropped by Bottleneck"}={}){return this._states.remove(this.options.id)?(this.rejectOnDrop&&this._reject(c??new D(n)),this.Events.trigger("dropped",{args:this.args,options:this.options,task:this.task,promise:this.promise}),!0):!1}_assertStatus(c){var n;if(n=this._states.jobStatus(this.options.id),!(n===c||c==="DONE"&&n===null))throw new D(`Invalid job status ${n}, expected ${c}. Please open an issue at https://github.com/SGrondin/bottleneck/issues`)}doReceive(){return this._states.start(this.options.id),this.Events.trigger("received",{args:this.args,options:this.options})}doQueue(c,n){return this._assertStatus("RECEIVED"),this._states.next(this.options.id),this.Events.trigger("queued",{args:this.args,options:this.options,reachedHWM:c,blocked:n})}doRun(){return this.retryCount===0?(this._assertStatus("QUEUED"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),this.Events.trigger("scheduled",{args:this.args,options:this.options})}async doExecute(c,n,u,l){var p,f,E;this.retryCount===0?(this._assertStatus("RUNNING"),this._states.next(this.options.id)):this._assertStatus("EXECUTING"),f={args:this.args,options:this.options,retryCount:this.retryCount},this.Events.trigger("executing",f);try{if(E=await(c!=null?c.schedule(this.options,this.task,...this.args):this.task(...this.args)),n())return this.doDone(f),await l(this.options,f),this._assertStatus("DONE"),this._resolve(E)}catch(C){return p=C,this._onFailure(p,f,n,u,l)}}doExpire(c,n,u){var l,p;return this._states.jobStatus(this.options.id==="RUNNING")&&this._states.next(this.options.id),this._assertStatus("EXECUTING"),p={args:this.args,options:this.options,retryCount:this.retryCount},l=new D(`This job timed out after ${this.options.expiration} ms.`),this._onFailure(l,p,c,n,u)}async _onFailure(c,n,u,l,p){var f,E;if(u())return f=await this.Events.trigger("failed",c,n),f!=null?(E=~~f,this.Events.trigger("retry",`Retrying ${this.options.id} after ${E} ms`,n),this.retryCount++,l(E)):(this.doDone(n),await p(this.options,n),this._assertStatus("DONE"),this._reject(c))}doDone(c){return this._assertStatus("EXECUTING"),this._states.next(this.options.id),this.Events.trigger("done",c)}};var H=V,Z,v,O;O=a,Z=$,v=class{constructor(c,n,u){this.instance=c,this.storeOptions=n,this.clientId=this.instance._randomIndex(),O.load(u,u,this),this._nextRequest=this._lastReservoirRefresh=this._lastReservoirIncrease=Date.now(),this._running=0,this._done=0,this._unblockTime=0,this.ready=this.Promise.resolve(),this.clients={},this._startHeartbeat()}_startHeartbeat(){var c;return this.heartbeat==null&&(this.storeOptions.reservoirRefreshInterval!=null&&this.storeOptions.reservoirRefreshAmount!=null||this.storeOptions.reservoirIncreaseInterval!=null&&this.storeOptions.reservoirIncreaseAmount!=null)?typeof(c=this.heartbeat=setInterval(()=>{var n,u,l,p,f;if(p=Date.now(),this.storeOptions.reservoirRefreshInterval!=null&&p>=this._lastReservoirRefresh+this.storeOptions.reservoirRefreshInterval&&(this._lastReservoirRefresh=p,this.storeOptions.reservoir=this.storeOptions.reservoirRefreshAmount,this.instance._drainAll(this.computeCapacity())),this.storeOptions.reservoirIncreaseInterval!=null&&p>=this._lastReservoirIncrease+this.storeOptions.reservoirIncreaseInterval&&({reservoirIncreaseAmount:n,reservoirIncreaseMaximum:l,reservoir:f}=this.storeOptions,this._lastReservoirIncrease=p,u=l!=null?Math.min(n,l-f):n,u>0))return this.storeOptions.reservoir+=u,this.instance._drainAll(this.computeCapacity())},this.heartbeatInterval)).unref=="function"?c.unref():void 0:clearInterval(this.heartbeat)}async __publish__(c){return await this.yieldLoop(),this.instance.Events.trigger("message",c.toString())}async __disconnect__(c){return await this.yieldLoop(),clearInterval(this.heartbeat),this.Promise.resolve()}yieldLoop(c=0){return new this.Promise(function(n,u){return setTimeout(n,c)})}computePenalty(){var c;return(c=this.storeOptions.penalty)!=null?c:15*this.storeOptions.minTime||5e3}async __updateSettings__(c){return await this.yieldLoop(),O.overwrite(c,c,this.storeOptions),this._startHeartbeat(),this.instance._drainAll(this.computeCapacity()),!0}async __running__(){return await this.yieldLoop(),this._running}async __queued__(){return await this.yieldLoop(),this.instance.queued()}async __done__(){return await this.yieldLoop(),this._done}async __groupCheck__(c){return await this.yieldLoop(),this._nextRequest+this.timeout<c}computeCapacity(){var c,n;return{maxConcurrent:c,reservoir:n}=this.storeOptions,c!=null&&n!=null?Math.min(c-this._running,n):c!=null?c-this._running:n??null}conditionsCheck(c){var n;return n=this.computeCapacity(),n==null||c<=n}async __incrementReservoir__(c){var n;return await this.yieldLoop(),n=this.storeOptions.reservoir+=c,this.instance._drainAll(this.computeCapacity()),n}async __currentReservoir__(){return await this.yieldLoop(),this.storeOptions.reservoir}isBlocked(c){return this._unblockTime>=c}check(c,n){return this.conditionsCheck(c)&&this._nextRequest-n<=0}async __check__(c){var n;return await this.yieldLoop(),n=Date.now(),this.check(c,n)}async __register__(c,n,u){var l,p;return await this.yieldLoop(),l=Date.now(),this.conditionsCheck(n)?(this._running+=n,this.storeOptions.reservoir!=null&&(this.storeOptions.reservoir-=n),p=Math.max(this._nextRequest-l,0),this._nextRequest=l+p+this.storeOptions.minTime,{success:!0,wait:p,reservoir:this.storeOptions.reservoir}):{success:!1}}strategyIsBlock(){return this.storeOptions.strategy===3}async __submit__(c,n){var u,l,p;if(await this.yieldLoop(),this.storeOptions.maxConcurrent!=null&&n>this.storeOptions.maxConcurrent)throw new Z(`Impossible to add a job having a weight of ${n} to a limiter having a maxConcurrent setting of ${this.storeOptions.maxConcurrent}`);return l=Date.now(),p=this.storeOptions.highWater!=null&&c===this.storeOptions.highWater&&!this.check(n,l),u=this.strategyIsBlock()&&(p||this.isBlocked(l)),u&&(this._unblockTime=l+this.computePenalty(),this._nextRequest=this._unblockTime+this.storeOptions.minTime,this.instance._dropAllQueued()),{reachedHWM:p,blocked:u,strategy:this.storeOptions.strategy}}async __free__(c,n){return await this.yieldLoop(),this._running-=n,this._done+=n,this.instance._drainAll(this.computeCapacity()),{running:this._running}}};var G=v,w,x;w=$,x=class{constructor(c){this.status=c,this._jobs={},this.counts=this.status.map(function(){return 0})}next(c){var n,u;if(n=this._jobs[c],u=n+1,n!=null&&u<this.status.length)return this.counts[n]--,this.counts[u]++,this._jobs[c]++;if(n!=null)return this.counts[n]--,delete this._jobs[c]}start(c){var n;return n=0,this._jobs[c]=n,this.counts[n]++}remove(c){var n;return n=this._jobs[c],n!=null&&(this.counts[n]--,delete this._jobs[c]),n!=null}jobStatus(c){var n;return(n=this.status[this._jobs[c]])!=null?n:null}statusJobs(c){var n,u,l,p,f;if(c!=null){if(u=this.status.indexOf(c),u<0)throw new w(`status must be one of ${this.status.join(", ")}`);l=this._jobs,p=[];for(n in l)f=l[n],f===u&&p.push(n);return p}else return Object.keys(this._jobs)}statusCounts(){return this.counts.reduce((c,n,u)=>(c[this.status[u]]=n,c),{})}};var N=x,b,d;b=h,d=class{constructor(c,n){this.schedule=this.schedule.bind(this),this.name=c,this.Promise=n,this._running=0,this._queue=new b}isEmpty(){return this._queue.length===0}async _tryToRun(){var c,n,u,l,p,f,E;if(this._running<1&&this._queue.length>0)return this._running++,{task:E,args:c,resolve:p,reject:l}=this._queue.shift(),n=await async function(){try{return f=await E(...c),function(){return p(f)}}catch(C){return u=C,function(){return l(u)}}}(),this._running--,this._tryToRun(),n()}schedule(c,...n){var u,l,p;return p=l=null,u=new this.Promise(function(f,E){return p=f,l=E}),this._queue.push({task:c,args:n,resolve:p,reject:l}),this._tryToRun(),u}};var m=d,T="2.19.5",_={version:T},R=Object.freeze({version:T,default:_}),P=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),F=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),I=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),q,M,Q,ne,te,re;re=a,q=y,ne=P,Q=F,te=I,M=(function(){class k{constructor(n={}){this.deleteKey=this.deleteKey.bind(this),this.limiterOptions=n,re.load(this.limiterOptions,this.defaults,this),this.Events=new q(this),this.instances={},this.Bottleneck=ft,this._startAutoCleanup(),this.sharedConnection=this.connection!=null,this.connection==null&&(this.limiterOptions.datastore==="redis"?this.connection=new ne(Object.assign({},this.limiterOptions,{Events:this.Events})):this.limiterOptions.datastore==="ioredis"&&(this.connection=new Q(Object.assign({},this.limiterOptions,{Events:this.Events}))))}key(n=""){var u;return(u=this.instances[n])!=null?u:(()=>{var l;return l=this.instances[n]=new this.Bottleneck(Object.assign(this.limiterOptions,{id:`${this.id}-${n}`,timeout:this.timeout,connection:this.connection})),this.Events.trigger("created",l,n),l})()}async deleteKey(n=""){var u,l;return l=this.instances[n],this.connection&&(u=await this.connection.__runCommand__(["del",...te.allKeys(`${this.id}-${n}`)])),l!=null&&(delete this.instances[n],await l.disconnect()),l!=null||u>0}limiters(){var n,u,l,p;u=this.instances,l=[];for(n in u)p=u[n],l.push({key:n,limiter:p});return l}keys(){return Object.keys(this.instances)}async clusterKeys(){var n,u,l,p,f,E,C,K,Y;if(this.connection==null)return this.Promise.resolve(this.keys());for(E=[],n=null,Y=`b_${this.id}-`.length,u=9;n!==0;)for([K,l]=await this.connection.__runCommand__(["scan",n??0,"match",`b_${this.id}-*_settings`,"count",1e4]),n=~~K,p=0,C=l.length;p<C;p++)f=l[p],E.push(f.slice(Y,-u));return E}_startAutoCleanup(){var n;return clearInterval(this.interval),typeof(n=this.interval=setInterval(async()=>{var u,l,p,f,E,C;E=Date.now(),p=this.instances,f=[];for(l in p){C=p[l];try{await C._store.__groupCheck__(E)?f.push(this.deleteKey(l)):f.push(void 0)}catch(K){u=K,f.push(C.Events.trigger("error",u))}}return f},this.timeout/2)).unref=="function"?n.unref():void 0}updateSettings(n={}){if(re.overwrite(n,this.defaults,this),re.overwrite(n,n,this.limiterOptions),n.timeout!=null)return this._startAutoCleanup()}disconnect(n=!0){var u;if(!this.sharedConnection)return(u=this.connection)!=null?u.disconnect(n):void 0}}return k.prototype.defaults={timeout:1e3*60*5,connection:null,Promise,id:"group-key"},k}).call(r);var ie=M,z,ee,ce;ce=a,ee=y,z=(function(){class k{constructor(n={}){this.options=n,ce.load(this.options,this.defaults,this),this.Events=new ee(this),this._arr=[],this._resetPromise(),this._lastFlush=Date.now()}_resetPromise(){return this._promise=new this.Promise((n,u)=>this._resolve=n)}_flush(){return clearTimeout(this._timeout),this._lastFlush=Date.now(),this._resolve(),this.Events.trigger("batch",this._arr),this._arr=[],this._resetPromise()}add(n){var u;return this._arr.push(n),u=this._promise,this._arr.length===this.maxSize?this._flush():this.maxTime!=null&&this._arr.length===1&&(this._timeout=setTimeout(()=>this._flush(),this.maxTime)),u}}return k.prototype.defaults={maxTime:null,maxSize:null,Promise},k}).call(r);var fe=z,xr=()=>console.log("You must import the full version of Bottleneck in order to use this feature."),Ir=o(R),ut,lt,Me,Be,pt,We,dt,gt,ht,He,se,mt=[].splice;We=10,lt=5,se=a,dt=B,Be=H,pt=G,gt=xr,Me=y,ht=N,He=m,ut=(function(){class k{constructor(n={},...u){var l,p;this._addToQueue=this._addToQueue.bind(this),this._validateOptions(n,u),se.load(n,this.instanceDefaults,this),this._queues=new dt(We),this._scheduled={},this._states=new ht(["RECEIVED","QUEUED","RUNNING","EXECUTING"].concat(this.trackDoneStatus?["DONE"]:[])),this._limiter=null,this.Events=new Me(this),this._submitLock=new He("submit",this.Promise),this._registerLock=new He("register",this.Promise),p=se.load(n,this.storeDefaults,{}),this._store=(function(){if(this.datastore==="redis"||this.datastore==="ioredis"||this.connection!=null)return l=se.load(n,this.redisStoreDefaults,{}),new gt(this,p,l);if(this.datastore==="local")return l=se.load(n,this.localStoreDefaults,{}),new pt(this,p,l);throw new k.prototype.BottleneckError(`Invalid datastore type: ${this.datastore}`)}).call(this),this._queues.on("leftzero",()=>{var f;return(f=this._store.heartbeat)!=null&&typeof f.ref=="function"?f.ref():void 0}),this._queues.on("zero",()=>{var f;return(f=this._store.heartbeat)!=null&&typeof f.unref=="function"?f.unref():void 0})}_validateOptions(n,u){if(!(n!=null&&typeof n=="object"&&u.length===0))throw new k.prototype.BottleneckError("Bottleneck v2 takes a single object argument. Refer to https://github.com/SGrondin/bottleneck#upgrading-to-v2 if you're upgrading from Bottleneck v1.")}ready(){return this._store.ready}clients(){return this._store.clients}channel(){return`b_${this.id}`}channel_client(){return`b_${this.id}_${this._store.clientId}`}publish(n){return this._store.__publish__(n)}disconnect(n=!0){return this._store.__disconnect__(n)}chain(n){return this._limiter=n,this}queued(n){return this._queues.queued(n)}clusterQueued(){return this._store.__queued__()}empty(){return this.queued()===0&&this._submitLock.isEmpty()}running(){return this._store.__running__()}done(){return this._store.__done__()}jobStatus(n){return this._states.jobStatus(n)}jobs(n){return this._states.statusJobs(n)}counts(){return this._states.statusCounts()}_randomIndex(){return Math.random().toString(36).slice(2)}check(n=1){return this._store.__check__(n)}_clearGlobalState(n){return this._scheduled[n]!=null?(clearTimeout(this._scheduled[n].expiration),delete this._scheduled[n],!0):!1}async _free(n,u,l,p){var f,E;try{if({running:E}=await this._store.__free__(n,l.weight),this.Events.trigger("debug",`Freed ${l.id}`,p),E===0&&this.empty())return this.Events.trigger("idle")}catch(C){return f=C,this.Events.trigger("error",f)}}_run(n,u,l){var p,f,E;return u.doRun(),p=this._clearGlobalState.bind(this,n),E=this._run.bind(this,n,u),f=this._free.bind(this,n,u),this._scheduled[n]={timeout:setTimeout(()=>u.doExecute(this._limiter,p,E,f),l),expiration:u.options.expiration!=null?setTimeout(function(){return u.doExpire(p,E,f)},l+u.options.expiration):void 0,job:u}}_drainOne(n){return this._registerLock.schedule(()=>{var u,l,p,f,E;return this.queued()===0?this.Promise.resolve(null):(E=this._queues.getFirst(),{options:f,args:u}=p=E.first(),n!=null&&f.weight>n?this.Promise.resolve(null):(this.Events.trigger("debug",`Draining ${f.id}`,{args:u,options:f}),l=this._randomIndex(),this._store.__register__(l,f.weight,f.expiration).then(({success:C,wait:K,reservoir:Y})=>{var ve;return this.Events.trigger("debug",`Drained ${f.id}`,{success:C,args:u,options:f}),C?(E.shift(),ve=this.empty(),ve&&this.Events.trigger("empty"),Y===0&&this.Events.trigger("depleted",ve),this._run(l,p,K),this.Promise.resolve(f.weight)):this.Promise.resolve(null)})))})}_drainAll(n,u=0){return this._drainOne(n).then(l=>{var p;return l!=null?(p=n!=null?n-l:n,this._drainAll(p,u+l)):this.Promise.resolve(u)}).catch(l=>this.Events.trigger("error",l))}_dropAllQueued(n){return this._queues.shiftAll(function(u){return u.doDrop({message:n})})}stop(n={}){var u,l;return n=se.load(n,this.stopDefaults),l=p=>{var f;return f=()=>{var E;return E=this._states.counts,E[0]+E[1]+E[2]+E[3]===p},new this.Promise((E,C)=>f()?E():this.on("done",()=>{if(f())return this.removeAllListeners("done"),E()}))},u=n.dropWaitingJobs?(this._run=function(p,f){return f.doDrop({message:n.dropErrorMessage})},this._drainOne=()=>this.Promise.resolve(null),this._registerLock.schedule(()=>this._submitLock.schedule(()=>{var p,f,E;f=this._scheduled;for(p in f)E=f[p],this.jobStatus(E.job.options.id)==="RUNNING"&&(clearTimeout(E.timeout),clearTimeout(E.expiration),E.job.doDrop({message:n.dropErrorMessage}));return this._dropAllQueued(n.dropErrorMessage),l(0)}))):this.schedule({priority:We-1,weight:0},()=>l(1)),this._receive=function(p){return p._reject(new k.prototype.BottleneckError(n.enqueueErrorMessage))},this.stop=()=>this.Promise.reject(new k.prototype.BottleneckError("stop() has already been called")),u}async _addToQueue(n){var u,l,p,f,E,C,K;({args:u,options:f}=n);try{({reachedHWM:E,blocked:l,strategy:K}=await this._store.__submit__(this.queued(),f.weight))}catch(Y){return p=Y,this.Events.trigger("debug",`Could not queue ${f.id}`,{args:u,options:f,error:p}),n.doDrop({error:p}),!1}return l?(n.doDrop(),!0):E&&(C=K===k.prototype.strategy.LEAK?this._queues.shiftLastFrom(f.priority):K===k.prototype.strategy.OVERFLOW_PRIORITY?this._queues.shiftLastFrom(f.priority+1):K===k.prototype.strategy.OVERFLOW?n:void 0,C!=null&&C.doDrop(),C==null||K===k.prototype.strategy.OVERFLOW)?(C==null&&n.doDrop(),E):(n.doQueue(E,l),this._queues.push(n),await this._drainAll(),E)}_receive(n){return this._states.jobStatus(n.options.id)!=null?(n._reject(new k.prototype.BottleneckError(`A job with the same id already exists (id=${n.options.id})`)),!1):(n.doReceive(),this._submitLock.schedule(this._addToQueue,n))}submit(...n){var u,l,p,f,E,C,K;return typeof n[0]=="function"?(E=n,[l,...n]=E,[u]=mt.call(n,-1),f=se.load({},this.jobDefaults)):(C=n,[f,l,...n]=C,[u]=mt.call(n,-1),f=se.load(f,this.jobDefaults)),K=(...Y)=>new this.Promise(function(ve,Lr){return l(...Y,function(...Tt){return(Tt[0]!=null?Lr:ve)(Tt)})}),p=new Be(K,n,f,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),p.promise.then(function(Y){return typeof u=="function"?u(...Y):void 0}).catch(function(Y){return Array.isArray(Y)?typeof u=="function"?u(...Y):void 0:typeof u=="function"?u(Y):void 0}),this._receive(p)}schedule(...n){var u,l,p;return typeof n[0]=="function"?([p,...n]=n,l={}):[l,p,...n]=n,u=new Be(p,n,l,this.jobDefaults,this.rejectOnDrop,this.Events,this._states,this.Promise),this._receive(u),u.promise}wrap(n){var u,l;return u=this.schedule.bind(this),l=function(...p){return u(n.bind(this),...p)},l.withOptions=function(p,...f){return u(p,n,...f)},l}async updateSettings(n={}){return await this._store.__updateSettings__(se.overwrite(n,this.storeDefaults)),se.overwrite(n,this.instanceDefaults,this),this}currentReservoir(){return this._store.__currentReservoir__()}incrementReservoir(n=0){return this._store.__incrementReservoir__(n)}}return k.default=k,k.Events=Me,k.version=k.prototype.version=Ir.version,k.strategy=k.prototype.strategy={LEAK:1,OVERFLOW:2,OVERFLOW_PRIORITY:4,BLOCK:3},k.BottleneckError=k.prototype.BottleneckError=$,k.Group=k.prototype.Group=ie,k.RedisConnection=k.prototype.RedisConnection=P,k.IORedisConnection=k.prototype.IORedisConnection=F,k.Batcher=k.prototype.Batcher=fe,k.prototype.jobDefaults={priority:lt,weight:1,expiration:null,id:"<no-id>"},k.prototype.storeDefaults={maxConcurrent:null,minTime:0,highWater:null,strategy:k.prototype.strategy.LEAK,penalty:null,reservoir:null,reservoirRefreshInterval:null,reservoirRefreshAmount:null,reservoirIncreaseInterval:null,reservoirIncreaseAmount:null,reservoirIncreaseMaximum:null},k.prototype.localStoreDefaults={Promise,timeout:null,heartbeatInterval:250},k.prototype.redisStoreDefaults={Promise,timeout:null,heartbeatInterval:5e3,clientTimeout:1e4,Redis:null,clientOptions:{},clusterNodes:null,clearDatastore:!1,connection:null},k.prototype.instanceDefaults={datastore:"local",connection:null,id:"<no-id>",rejectOnDrop:!0,trackDoneStatus:!1,Promise},k.prototype.stopDefaults={enqueueErrorMessage:"This limiter has been stopped and cannot accept new jobs.",dropWaitingJobs:!0,dropErrorMessage:"This limiter has been stopped."},k}).call(r);var ft=ut,$r=ft;return $r})})(cr);var oo=cr.exports;const ur=xe(oo);async function lr(e,t,r,o){if(!r.request||!r.request.request)throw r;if(r.status>=400&&!e.doNotRetry.includes(r.status)){const s=o.request.retries!=null?o.request.retries:e.retries,i=Math.pow((o.request.retryCount||0)+1,2);throw t.retry.retryRequest(r,s,i)}throw r}async function no(e,t,r,o){const s=new ur;return s.on("failed",function(i,a){const g=~~i.request.request.retries,h=~~i.request.request.retryAfter;if(o.request.retryCount=a.retryCount+1,g>a.retryCount)return h*e.retryAfterBaseValue}),s.schedule(io.bind(null,e,t,r),o)}async function io(e,t,r,o){const s=await r(r,o);if(s.data&&s.data.errors&&/Something went wrong while executing your query/.test(s.data.errors[0].message)){const i=new de(s.data.errors[0].message,500,{request:o,response:s});return lr(e,t,i,o)}return s}var ao="6.0.1";function pr(e,t){const r=Object.assign({enabled:!0,retryAfterBaseValue:1e3,doNotRetry:[400,401,403,404,422,451],retries:3},t.retry);return r.enabled&&(e.hook.error("request",lr.bind(null,r,e)),e.hook.wrap("request",no.bind(null,r,e))),{retry:{retryRequest:(o,s,i)=>(o.request.request=Object.assign({},o.request.request,{retries:s,retryAfter:i}),o)}}}pr.VERSION=ao;var co="8.1.3",Ke=()=>Promise.resolve();function uo(e,t,r){return e.retryLimiter.schedule(lo,e,t,r)}async function lo(e,t,r){const o=r.method!=="GET"&&r.method!=="HEAD",{pathname:s}=new URL(r.url,"http://github.test"),i=r.method==="GET"&&s.startsWith("/search/"),a=s.startsWith("/graphql"),h=~~t.retryCount>0?{priority:0,weight:0}:{};e.clustering&&(h.expiration=1e3*60),(o||a)&&await e.write.key(e.id).schedule(h,Ke),o&&e.triggersNotification(s)&&await e.notifications.key(e.id).schedule(h,Ke),i&&await e.search.key(e.id).schedule(h,Ke);const A=e.global.key(e.id).schedule(h,t,r);if(a){const y=await A;if(y.data.errors!=null&&y.data.errors.some(S=>S.type==="RATE_LIMITED"))throw Object.assign(new Error("GraphQL Rate Limit Exceeded"),{response:y,data:y.data})}return A}var po=["/orgs/{org}/invitations","/orgs/{org}/invitations/{invitation_id}","/orgs/{org}/teams/{team_slug}/discussions","/orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments","/repos/{owner}/{repo}/collaborators/{username}","/repos/{owner}/{repo}/commits/{commit_sha}/comments","/repos/{owner}/{repo}/issues","/repos/{owner}/{repo}/issues/{issue_number}/comments","/repos/{owner}/{repo}/pulls","/repos/{owner}/{repo}/pulls/{pull_number}/comments","/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies","/repos/{owner}/{repo}/pulls/{pull_number}/merge","/repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers","/repos/{owner}/{repo}/pulls/{pull_number}/reviews","/repos/{owner}/{repo}/releases","/teams/{team_id}/discussions","/teams/{team_id}/discussions/{discussion_number}/comments"];function go(e){const r=`^(?:${e.map(o=>o.split("/").map(s=>s.startsWith("{")?"(?:.+?)":s).join("/")).map(o=>`(?:${o})`).join("|")})[^/]*$`;return new RegExp(r,"i")}var Pt=go(po),dr=Pt.test.bind(Pt),Ee={},ho=function(e,t){Ee.global=new e.Group({id:"octokit-global",maxConcurrent:10,...t}),Ee.search=new e.Group({id:"octokit-search",maxConcurrent:1,minTime:2e3,...t}),Ee.write=new e.Group({id:"octokit-write",maxConcurrent:1,minTime:1e3,...t}),Ee.notifications=new e.Group({id:"octokit-notifications",maxConcurrent:1,minTime:3e3,...t})};function nt(e,t){const{enabled:r=!0,Bottleneck:o=ur,id:s="no-id",timeout:i=1e3*60*2,connection:a}=t.throttle||{};if(!r)return{};const g={connection:a,timeout:i};Ee.global==null&&ho(o,g);const h=Object.assign({clustering:a!=null,triggersNotification:dr,fallbackSecondaryRateRetryAfter:60,retryAfterBaseValue:1e3,retryLimiter:new o,id:s,...Ee},t.throttle);if(typeof h.onSecondaryRateLimit!="function"||typeof h.onRateLimit!="function")throw new Error(`octokit/plugin-throttling error:
        You must pass the onSecondaryRateLimit and onRateLimit error handlers.
        See https://octokit.github.io/rest.js/#throttling

        const octokit = new Octokit({
          throttle: {
            onSecondaryRateLimit: (retryAfter, options) => {/* ... */},
            onRateLimit: (retryAfter, options) => {/* ... */}
          }
        })
    `);const A={},y=new o.Events(A);return A.on("secondary-limit",h.onSecondaryRateLimit),A.on("rate-limit",h.onRateLimit),A.on("error",S=>e.log.warn("Error in throttling-plugin limit handler",S)),h.retryLimiter.on("failed",async function(S,L){const[j,B,W]=L.args,{pathname:$}=new URL(W.url,"http://github.test");if(!($.startsWith("/graphql")&&S.status!==401||S.status===403))return;const U=~~B.retryCount;B.retryCount=U,W.request.retryCount=U;const{wantRetry:V,retryAfter:oe=0}=await async function(){var X;if(/\bsecondary rate\b/i.test(S.message)){const H=Number(S.response.headers["retry-after"])||j.fallbackSecondaryRateRetryAfter;return{wantRetry:await y.trigger("secondary-limit",H,W,e,U),retryAfter:H}}if(S.response.headers!=null&&S.response.headers["x-ratelimit-remaining"]==="0"||(((X=S.response.data)==null?void 0:X.errors)??[]).some(H=>H.type==="RATE_LIMITED")){const H=new Date(~~S.response.headers["x-ratelimit-reset"]*1e3).getTime(),Z=Math.max(Math.ceil((H-Date.now())/1e3)+1,0);return{wantRetry:await y.trigger("rate-limit",Z,W,e,U),retryAfter:Z}}return{}}();if(V)return B.retryCount++,oe*j.retryAfterBaseValue}),e.hook.wrap("request",uo.bind(null,h)),{}}nt.VERSION=co;nt.triggersNotification=dr;const mo=be(Nr);var fo=function(t){return btoa(t)};const le=xe(fo),To="4.0.1";function _o(e){const t=e.clientType||"oauth-app",r=e.baseUrl||"https://github.com",o={clientType:t,allowSignup:e.allowSignup!==!1,clientId:e.clientId,login:e.login||null,redirectUrl:e.redirectUrl||null,state:e.state||Math.random().toString(36).substr(2),url:""};if(t==="oauth-app"){const s="scopes"in e?e.scopes:[];o.scopes=typeof s=="string"?s.split(/[,\s]+/).filter(Boolean):s}return o.url=Eo(`${r}/login/oauth/authorize`,o),o}function Eo(e,t){const r={allowSignup:"allow_signup",clientId:"client_id",login:"login",redirectUrl:"redirect_uri",scopes:"scope",state:"state"};let o=e;return Object.keys(r).filter(s=>t[s]!==null).filter(s=>s!=="scopes"?!0:t.clientType==="github-app"?!1:!Array.isArray(t[s])||t[s].length>0).map(s=>[r[s],`${t[s]}`]).forEach(([s,i],a)=>{o+=a===0?"?":"&",o+=`${s}=${encodeURIComponent(i)}`}),o}function gr(e){const t=e.endpoint.DEFAULTS;return/^https:\/\/(api\.)?github\.com$/.test(t.baseUrl)?"https://github.com":t.baseUrl.replace("/api/v3","")}async function $e(e,t,r){const o={baseUrl:gr(e),headers:{accept:"application/json"},...r},s=await e(t,o);if("error"in s.data){const i=new de(`${s.data.error_description} (${s.data.error}, ${s.data.error_uri})`,400,{request:e.endpoint.merge(t,o),headers:s.headers});throw i.response=s,i}return s}function wo({request:e=J,...t}){const r=gr(e);return _o({...t,baseUrl:r})}async function hr(e){const t=e.request||J,r=await $e(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,code:e.code,redirect_uri:e.redirectUrl}),o={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if(e.clientType==="github-app"){if("refresh_token"in r.data){const s=new Date(r.headers.date).getTime();o.refreshToken=r.data.refresh_token,o.expiresAt=Gt(s,r.data.expires_in),o.refreshTokenExpiresAt=Gt(s,r.data.refresh_token_expires_in)}delete o.scopes}return{...r,authentication:o}}function Gt(e,t){return new Date(e+t*1e3).toISOString()}async function mr(e){const t=e.request||J,r={client_id:e.clientId};return"scopes"in e&&Array.isArray(e.scopes)&&(r.scope=e.scopes.join(" ")),$e(t,"POST /login/device/code",r)}async function Xe(e){const t=e.request||J,r=await $e(t,"POST /login/oauth/access_token",{client_id:e.clientId,device_code:e.code,grant_type:"urn:ietf:params:oauth:grant-type:device_code"}),o={clientType:e.clientType,clientId:e.clientId,token:r.data.access_token,scopes:r.data.scope.split(/\s+/).filter(Boolean)};if("clientSecret"in e&&(o.clientSecret=e.clientSecret),e.clientType==="github-app"){if("refresh_token"in r.data){const s=new Date(r.headers.date).getTime();o.refreshToken=r.data.refresh_token,o.expiresAt=Rt(s,r.data.expires_in),o.refreshTokenExpiresAt=Rt(s,r.data.refresh_token_expires_in)}delete o.scopes}return{...r,authentication:o}}function Rt(e,t){return new Date(e+t*1e3).toISOString()}async function fr(e){const r=await(e.request||J)("POST /applications/{client_id}/token",{headers:{authorization:`basic ${le(`${e.clientId}:${e.clientSecret}`)}`},client_id:e.clientId,access_token:e.token}),o={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.token,scopes:r.data.scopes};return r.data.expires_at&&(o.expiresAt=r.data.expires_at),e.clientType==="github-app"&&delete o.scopes,{...r,authentication:o}}async function Tr(e){const t=e.request||J,r=await $e(t,"POST /login/oauth/access_token",{client_id:e.clientId,client_secret:e.clientSecret,grant_type:"refresh_token",refresh_token:e.refreshToken}),o=new Date(r.headers.date).getTime(),s={clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,token:r.data.access_token,refreshToken:r.data.refresh_token,expiresAt:Ft(o,r.data.expires_in),refreshTokenExpiresAt:Ft(o,r.data.refresh_token_expires_in)};return{...r,authentication:s}}function Ft(e,t){return new Date(e+t*1e3).toISOString()}async function bo(e){const{request:t,clientType:r,clientId:o,clientSecret:s,token:i,...a}=e,h=await(t||J)("POST /applications/{client_id}/token/scoped",{headers:{authorization:`basic ${le(`${o}:${s}`)}`},client_id:o,access_token:i,...a}),A=Object.assign({clientType:r,clientId:o,clientSecret:s,token:h.data.token},h.data.expires_at?{expiresAt:h.data.expires_at}:{});return{...h,authentication:A}}async function _r(e){const t=e.request||J,r=le(`${e.clientId}:${e.clientSecret}`),o=await t("PATCH /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token}),s={clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:o.data.token,scopes:o.data.scopes};return o.data.expires_at&&(s.expiresAt=o.data.expires_at),e.clientType==="github-app"&&delete s.scopes,{...o,authentication:s}}async function Er(e){const t=e.request||J,r=le(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/token",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}async function wr(e){const t=e.request||J,r=le(`${e.clientId}:${e.clientSecret}`);return t("DELETE /applications/{client_id}/grant",{headers:{authorization:`basic ${r}`},client_id:e.clientId,access_token:e.token})}const yo=Object.freeze(Object.defineProperty({__proto__:null,VERSION:To,checkToken:fr,createDeviceCode:mr,deleteAuthorization:wr,deleteToken:Er,exchangeDeviceCode:Xe,exchangeWebFlowCode:hr,getWebFlowAuthorizationUrl:wo,refreshToken:Tr,resetToken:_r,scopeToken:bo},Symbol.toStringTag,{value:"Module"}));async function br(e,t){const r=vo(e,t.auth);if(r)return r;const{data:o}=await mr({clientType:e.clientType,clientId:e.clientId,request:t.request||e.request,scopes:t.auth.scopes||e.scopes});await e.onVerification(o);const s=await Ze(t.request||e.request,e.clientId,e.clientType,o);return e.authentication=s,s}function vo(e,t){if(t.refresh===!0||!e.authentication)return!1;if(e.clientType==="github-app")return e.authentication;const r=e.authentication,o=("scopes"in t&&t.scopes||e.scopes).join(" "),s=r.scopes.join(" ");return o===s?r:!1}async function Dt(e){await new Promise(t=>setTimeout(t,e*1e3))}async function Ze(e,t,r,o){try{const s={clientId:t,request:e,code:o.device_code},{authentication:i}=r==="oauth-app"?await Xe({...s,clientType:"oauth-app"}):await Xe({...s,clientType:"github-app"});return{type:"token",tokenType:"oauth",...i}}catch(s){if(!s.response)throw s;const i=s.response.data.error;if(i==="authorization_pending")return await Dt(o.interval),Ze(e,t,r,o);if(i==="slow_down")return await Dt(o.interval+5),Ze(e,t,r,o);throw s}}async function ko(e,t){return br(e,{auth:t})}async function Ao(e,t,r,o){let s=t.endpoint.merge(r,o);if(/\/login\/(oauth\/access_token|device\/code)$/.test(s.url))return t(s);const{token:i}=await br(e,{request:t,auth:{type:"oauth"}});return s.headers.authorization=`token ${i}`,t(s)}var So="6.0.1";function Oo(e){const t=e.request||J.defaults({headers:{"user-agent":`octokit-auth-oauth-device.js/${So} ${ue()}`}}),{request:r=t,...o}=e,s=e.clientType==="github-app"?{...o,clientType:"github-app",request:r}:{...o,clientType:"oauth-app",request:r,scopes:e.scopes||[]};if(!e.clientId)throw new Error('[@octokit/auth-oauth-device] "clientId" option must be set (https://github.com/octokit/auth-oauth-device.js#usage)');if(!e.onVerification)throw new Error('[@octokit/auth-oauth-device] "onVerification" option must be a function (https://github.com/octokit/auth-oauth-device.js#usage)');return Object.assign(ko.bind(null,s),{hook:Ao.bind(null,s)})}var yr="4.0.1";async function Ct(e){if("code"in e.strategyOptions){const{authentication:t}=await hr({clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request});return{type:"token",tokenType:"oauth",...t}}if("onVerification"in e.strategyOptions){const r=await Oo({clientType:e.clientType,clientId:e.clientId,onTokenCreated:e.onTokenCreated,...e.strategyOptions,request:e.request})({type:"oauth"});return{clientSecret:e.clientSecret,...r}}if("token"in e.strategyOptions)return{type:"token",tokenType:"oauth",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,onTokenCreated:e.onTokenCreated,...e.strategyOptions};throw new Error("[@octokit/auth-oauth-user] Invalid strategy options")}async function et(e,t={}){var o,s;if(e.authentication||(e.authentication=e.clientType==="oauth-app"?await Ct(e):await Ct(e)),e.authentication.invalid)throw new Error("[@octokit/auth-oauth-user] Token is invalid");const r=e.authentication;if("expiresAt"in r&&(t.type==="refresh"||new Date(r.expiresAt)<new Date)){const{authentication:i}=await Tr({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,refreshToken:r.refreshToken,request:e.request});e.authentication={tokenType:"oauth",type:"token",...i}}if(t.type==="refresh"){if(e.clientType==="oauth-app")throw new Error("[@octokit/auth-oauth-user] OAuth Apps do not support expiring tokens");if(!r.hasOwnProperty("expiresAt"))throw new Error("[@octokit/auth-oauth-user] Refresh token missing");await((o=e.onTokenCreated)==null?void 0:o.call(e,e.authentication,{type:t.type}))}if(t.type==="check"||t.type==="reset"){const i=t.type==="check"?fr:_r;try{const{authentication:a}=await i({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request});return e.authentication={tokenType:"oauth",type:"token",...a},t.type==="reset"&&await((s=e.onTokenCreated)==null?void 0:s.call(e,e.authentication,{type:t.type})),e.authentication}catch(a){throw a.status===404&&(a.message="[@octokit/auth-oauth-user] Token is invalid",e.authentication.invalid=!0),a}}if(t.type==="delete"||t.type==="deleteAuthorization"){const i=t.type==="delete"?Er:wr;try{await i({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:e.authentication.token,request:e.request})}catch(a){if(a.status!==404)throw a}return e.authentication.invalid=!0,e.authentication}return e.authentication}var Po=/\/applications\/[^/]+\/(token|grant)s?/;function it(e){return e&&Po.test(e)}async function Go(e,t,r,o={}){const s=t.endpoint.merge(r,o);if(/\/login\/(oauth\/access_token|device\/code)$/.test(s.url))return t(s);if(it(s.url)){const a=le(`${e.clientId}:${e.clientSecret}`);return s.headers.authorization=`basic ${a}`,t(s)}const{token:i}=e.clientType==="oauth-app"?await et({...e,request:t}):await et({...e,request:t});return s.headers.authorization="token "+i,t(s)}function De({clientId:e,clientSecret:t,clientType:r="oauth-app",request:o=J.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${yr} ${ue()}`}}),onTokenCreated:s,...i}){const a=Object.assign({clientType:r,clientId:e,clientSecret:t,onTokenCreated:s,strategyOptions:i,request:o});return Object.assign(et.bind(null,a),{hook:Go.bind(null,a)})}De.VERSION=yr;const Ro=Object.freeze(Object.defineProperty({__proto__:null,createOAuthUserAuth:De,requiresBasicAuth:it},Symbol.toStringTag,{value:"Module"}));async function Fo(e,t){if(t.type==="oauth-app")return{type:"oauth-app",clientId:e.clientId,clientSecret:e.clientSecret,clientType:e.clientType,headers:{authorization:`basic ${le(`${e.clientId}:${e.clientSecret}`)}`}};if("factory"in t){const{type:s,...i}={...t,...e};return t.factory(i)}const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.request,...t};return(e.clientType==="oauth-app"?await De({...r,clientType:e.clientType}):await De({...r,clientType:e.clientType}))()}async function Do(e,t,r,o){let s=t.endpoint.merge(r,o);if(/\/login\/(oauth\/access_token|device\/code)$/.test(s.url))return t(s);if(e.clientType==="github-app"&&!it(s.url))throw new Error(`[@octokit/auth-oauth-app] GitHub Apps cannot use their client ID/secret for basic authentication for endpoints other than "/applications/{client_id}/**". "${s.method} ${s.url}" is not supported.`);const i=le(`${e.clientId}:${e.clientSecret}`);s.headers.authorization=`basic ${i}`;try{return await t(s)}catch(a){throw a.status!==401||(a.message=`[@octokit/auth-oauth-app] "${s.method} ${s.url}" does not support clientId/clientSecret basic authentication.`),a}}var Co="7.0.1";function Uo(e){const t=Object.assign({request:J.defaults({headers:{"user-agent":`octokit-auth-oauth-app.js/${Co} ${ue()}`}}),clientType:"oauth-app"},e);return Object.assign(Fo.bind(null,t),{hook:Do.bind(null,t)})}const xo=Object.freeze(Object.defineProperty({__proto__:null,createOAuthAppAuth:Uo,createOAuthUserAuth:De},Symbol.toStringTag,{value:"Module"})),vr=be(xo),Le=be(Ro),Io=be(js),me=be(yo);async function $o(e){return{type:"unauthenticated",reason:e}}function Lo(e){return e.status!==403||!e.response?!1:e.response.headers["x-ratelimit-remaining"]==="0"}var jo=/\babuse\b/i;function qo(e){return e.status!==403?!1:jo.test(e.message)}async function Mo(e,t,r,o){const s=t.endpoint.merge(r,o);return t(s).catch(i=>{throw i.status===404?(i.message=`Not found. May be due to lack of authentication. Reason: ${e}`,i):Lo(i)?(i.message=`API rate limit exceeded. This maybe caused by the lack of authentication. Reason: ${e}`,i):qo(i)?(i.message=`You have triggered an abuse detection mechanism. This maybe caused by the lack of authentication. Reason: ${e}`,i):i.status===401?(i.message=`Unauthorized. "${s.method} ${s.url}" failed most likely due to lack of authentication. Reason: ${e}`,i):(i.status>=400&&i.status<500&&(i.message=i.message.replace(/\.?$/,`. May be caused by lack of authentication (${e}).`)),i)})}var Bo=function(t){if(!t||!t.reason)throw new Error("[@octokit/auth-unauthenticated] No reason passed to createUnauthenticatedAuth");return Object.assign($o.bind(null,t.reason),{hook:Mo.bind(null,t.reason)})};const Wo=Object.freeze(Object.defineProperty({__proto__:null,createUnauthenticatedAuth:Bo},Symbol.toStringTag,{value:"Module"})),kr=be(Wo);var Ho=Object.create,je=Object.defineProperty,No=Object.getOwnPropertyDescriptor,Vo=Object.getOwnPropertyNames,zo=Object.getPrototypeOf,Ko=Object.prototype.hasOwnProperty,Yo=(e,t)=>{for(var r in t)je(e,r,{get:t[r],enumerable:!0})},Ar=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let s of Vo(t))!Ko.call(e,s)&&s!==r&&je(e,s,{get:()=>t[s],enumerable:!(o=No(t,s))||o.enumerable});return e},pe=(e,t,r)=>(r=e!=null?Ho(zo(e)):{},Ar(t||!e||!e.__esModule?je(r,"default",{value:e,enumerable:!0}):r,e)),Jo=e=>Ar(je({},"__esModule",{value:!0}),e),Sr={};Yo(Sr,{OAuthApp:()=>Gn,createAWSLambdaAPIGatewayV2Handler:()=>Pn,createNodeMiddleware:()=>yn,createWebWorkerHandler:()=>An,handleRequest:()=>qe,sendNodeResponse:()=>Rr,unknownRouteResponse:()=>Gr});var Qo=Jo(Sr),Xo=vr,Or="6.1.0";function Pr(e,t,r){if(Array.isArray(t)){for(const o of t)Pr(e,o,r);return}e.eventHandlers[t]||(e.eventHandlers[t]=[]),e.eventHandlers[t].push(r)}var Zo=Io,en=mo,tn=Zo.Octokit.defaults({userAgent:`octokit-oauth-app.js/${Or} ${(0,en.getUserAgent)()}`}),rn=Le;async function ae(e,t){const{name:r,action:o}=t;if(e.eventHandlers[`${r}.${o}`])for(const s of e.eventHandlers[`${r}.${o}`])await s(t);if(e.eventHandlers[r])for(const s of e.eventHandlers[r])await s(t)}async function sn(e,t){return e.octokit.auth({type:"oauth-user",...t,async factory(r){const o=new e.Octokit({authStrategy:rn.createOAuthUserAuth,auth:r}),s=await o.auth({type:"get"});return await ae(e,{name:"token",action:"created",token:s.token,scopes:s.scopes,authentication:s,octokit:o}),o}})}var on=pe(me);function nn(e,t){const r={clientId:e.clientId,request:e.octokit.request,...t,allowSignup:e.allowSignup??t.allowSignup,redirectUrl:t.redirectUrl??e.redirectUrl,scopes:t.scopes??e.defaultScopes};return on.getWebFlowAuthorizationUrl({clientType:e.clientType,...r})}var an=pe(vr);async function cn(e,t){const r=await e.octokit.auth({type:"oauth-user",...t});return await ae(e,{name:"token",action:"created",token:r.token,scopes:r.scopes,authentication:r,octokit:new e.Octokit({authStrategy:an.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.token,scopes:r.scopes,refreshToken:r.refreshToken,expiresAt:r.expiresAt,refreshTokenExpiresAt:r.refreshTokenExpiresAt}})}),{authentication:r}}var un=pe(me);async function ln(e,t){const r=await un.checkToken({clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t});return Object.assign(r.authentication,{type:"token",tokenType:"oauth"}),r}var Ut=pe(me),xt=Le;async function pn(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t};if(e.clientType==="oauth-app"){const i=await Ut.resetToken({clientType:"oauth-app",...r}),a=Object.assign(i.authentication,{type:"token",tokenType:"oauth"});return await ae(e,{name:"token",action:"reset",token:i.authentication.token,scopes:i.authentication.scopes||void 0,authentication:a,octokit:new e.Octokit({authStrategy:xt.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:i.authentication.token,scopes:i.authentication.scopes}})}),{...i,authentication:a}}const o=await Ut.resetToken({clientType:"github-app",...r}),s=Object.assign(o.authentication,{type:"token",tokenType:"oauth"});return await ae(e,{name:"token",action:"reset",token:o.authentication.token,authentication:s,octokit:new e.Octokit({authStrategy:xt.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:o.authentication.token}})}),{...o,authentication:s}}var dn=pe(me),gn=Le;async function hn(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.refreshToken() is not supported for OAuth Apps");const r=await dn.refreshToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,refreshToken:t.refreshToken}),o=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await ae(e,{name:"token",action:"refreshed",token:r.authentication.token,authentication:o,octokit:new e.Octokit({authStrategy:gn.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:o}}var mn=pe(me),fn=Le;async function Tn(e,t){if(e.clientType==="oauth-app")throw new Error("[@octokit/oauth-app] app.scopeToken() is not supported for OAuth Apps");const r=await mn.scopeToken({clientType:"github-app",clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t}),o=Object.assign(r.authentication,{type:"token",tokenType:"oauth"});return await ae(e,{name:"token",action:"scoped",token:r.authentication.token,authentication:o,octokit:new e.Octokit({authStrategy:fn.createOAuthUserAuth,auth:{clientType:e.clientType,clientId:e.clientId,clientSecret:e.clientSecret,token:r.authentication.token}})}),{...r,authentication:o}}var It=pe(me),_n=kr;async function En(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},o=e.clientType==="oauth-app"?await It.deleteToken({clientType:"oauth-app",...r}):await It.deleteToken({clientType:"github-app",...r});return await ae(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:_n.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),o}var $t=pe(me),Lt=kr;async function wn(e,t){const r={clientId:e.clientId,clientSecret:e.clientSecret,request:e.octokit.request,...t},o=e.clientType==="oauth-app"?await $t.deleteAuthorization({clientType:"oauth-app",...r}):await $t.deleteAuthorization({clientType:"github-app",...r});return await ae(e,{name:"token",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Lt.createUnauthenticatedAuth,auth:{reason:'Handling "token.deleted" event. The access for the token has been revoked.'}})}),await ae(e,{name:"authorization",action:"deleted",token:t.token,octokit:new e.Octokit({authStrategy:Lt.createUnauthenticatedAuth,auth:{reason:'Handling "authorization.deleted" event. The access for the app has been revoked.'}})}),o}function Gr(e){return{status:404,headers:{"content-type":"application/json"},text:JSON.stringify({error:`Unknown route: ${e.method} ${e.url}`})}}async function qe(e,{pathPrefix:t="/api/github/oauth"},r){var y,S,L,j,B,W;if(r.method==="OPTIONS")return{status:200,headers:{"access-control-allow-origin":"*","access-control-allow-methods":"*","access-control-allow-headers":"Content-Type, User-Agent, Authorization"}};let{pathname:o}=new URL(r.url,"http://localhost");if(!o.startsWith(`${t}/`))return;o=o.slice(t.length+1);const s=[r.method,o].join(" "),i={getLogin:"GET login",getCallback:"GET callback",createToken:"POST token",getToken:"GET token",patchToken:"PATCH token",patchRefreshToken:"PATCH refresh-token",scopeToken:"POST token/scoped",deleteToken:"DELETE token",deleteGrant:"DELETE grant"};if(!Object.values(i).includes(s))return Gr(r);let a;try{const $=await r.text();a=$?JSON.parse($):{}}catch{return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:"[@octokit/oauth-app] request error"})}}const{searchParams:g}=new URL(r.url,"http://localhost"),h=Object.fromEntries(g),A=r.headers;try{if(s===i.getLogin){const{url:D}=e.getWebFlowAuthorizationUrl({state:h.state,scopes:h.scopes?h.scopes.split(","):void 0,allowSignup:h.allowSignup?h.allowSignup==="true":void 0,redirectUrl:h.redirectUrl});return{status:302,headers:{location:D}}}if(s===i.getCallback){if(h.error)throw new Error(`[@octokit/oauth-app] ${h.error} ${h.error_description}`);if(!h.code)throw new Error('[@octokit/oauth-app] "code" parameter is required');const{authentication:{token:D}}=await e.createToken({code:h.code});return{status:200,headers:{"content-type":"text/html"},text:`<h1>Token created successfully</h1>

<p>Your token is: <strong>${D}</strong>. Copy it now as it cannot be shown again.</p>`}}if(s===i.createToken){const{code:D,redirectUrl:U}=a;if(!D)throw new Error('[@octokit/oauth-app] "code" parameter is required');const V=await e.createToken({code:D,redirectUrl:U});return delete V.authentication.clientSecret,{status:201,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(V)}}if(s===i.getToken){const D=(y=A.authorization)==null?void 0:y.substr(6);if(!D)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const U=await e.checkToken({token:D});return delete U.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(U)}}if(s===i.patchToken){const D=(S=A.authorization)==null?void 0:S.substr(6);if(!D)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const U=await e.resetToken({token:D});return delete U.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(U)}}if(s===i.patchRefreshToken){if(!((L=A.authorization)==null?void 0:L.substr(6)))throw new Error('[@octokit/oauth-app] "Authorization" header is required');const{refreshToken:U}=a;if(!U)throw new Error("[@octokit/oauth-app] refreshToken must be sent in request body");const V=await e.refreshToken({refreshToken:U});return delete V.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(V)}}if(s===i.scopeToken){const D=(j=A.authorization)==null?void 0:j.substr(6);if(!D)throw new Error('[@octokit/oauth-app] "Authorization" header is required');const U=await e.scopeToken({token:D,...a});return delete U.authentication.clientSecret,{status:200,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify(U)}}if(s===i.deleteToken){const D=(B=A.authorization)==null?void 0:B.substr(6);if(!D)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteToken({token:D}),{status:204,headers:{"access-control-allow-origin":"*"}}}const $=(W=A.authorization)==null?void 0:W.substr(6);if(!$)throw new Error('[@octokit/oauth-app] "Authorization" header is required');return await e.deleteAuthorization({token:$}),{status:204,headers:{"access-control-allow-origin":"*"}}}catch($){return{status:400,headers:{"content-type":"application/json","access-control-allow-origin":"*"},text:JSON.stringify({error:$.message})}}}function bn(e){const{method:t,url:r,headers:o}=e;async function s(){return await new Promise((a,g)=>{let h=[];e.on("error",g).on("data",A=>h.push(A)).on("end",()=>a(Buffer.concat(h).toString()))})}return{method:t,url:r,headers:o,text:s}}function Rr(e,t){t.writeHead(e.status,e.headers),t.end(e.text)}function yn(e,t={}){return async function(r,o,s){const i=await bn(r),a=await qe(e,t,i);return a?(Rr(a,o),!0):(s==null||s(),!1)}}function vn(e){const t=Object.fromEntries(e.headers.entries());return{method:e.method,url:e.url,headers:t,text:()=>e.text()}}function kn(e){return new Response(e.text,{status:e.status,headers:e.headers})}function An(e,t={}){return async function(r){const o=await vn(r),s=await qe(e,t,o);return s?kn(s):void 0}}function Sn(e){const{method:t}=e.requestContext.http;let r=e.rawPath;const{stage:o}=e.requestContext;r.startsWith("/"+o)&&(r=r.substring(o.length+1)),e.rawQueryString&&(r+="?"+e.rawQueryString);const s=e.headers;return{method:t,url:r,headers:s,text:async()=>e.body||""}}function On(e){return{statusCode:e.status,headers:e.headers,body:e.text}}function Pn(e,t={}){return async function(r){const o=Sn(r),s=await qe(e,t,o);return s?On(s):void 0}}var Ce,Gn=(Ce=class{static defaults(t){return class extends this{constructor(...o){super({...t,...o[0]})}}}constructor(t){const r=t.Octokit||tn;this.type=t.clientType||"oauth-app";const o=new r({authStrategy:Xo.createOAuthAppAuth,auth:{clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret}}),s={clientType:this.type,clientId:t.clientId,clientSecret:t.clientSecret,defaultScopes:t.defaultScopes||[],allowSignup:t.allowSignup,baseUrl:t.baseUrl,redirectUrl:t.redirectUrl,log:t.log,Octokit:r,octokit:o,eventHandlers:{}};this.on=Pr.bind(null,s),this.octokit=o,this.getUserOctokit=sn.bind(null,s),this.getWebFlowAuthorizationUrl=nn.bind(null,s),this.createToken=cn.bind(null,s),this.checkToken=ln.bind(null,s),this.resetToken=pn.bind(null,s),this.refreshToken=hn.bind(null,s),this.scopeToken=Tn.bind(null,s),this.deleteToken=En.bind(null,s),this.deleteAuthorization=wn.bind(null,s)}},Ce.VERSION=Or,Ce),Rn="3.1.2",at=Zt.plugin(ar,rr,Qs,pr,nt).defaults({userAgent:`octokit.js/${Rn}`,throttle:{onRateLimit:Fn,onSecondaryRateLimit:Dn}});function Fn(e,t,r){if(r.log.warn(`Request quota exhausted for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}function Dn(e,t,r){if(r.log.warn(`SecondaryRateLimit detected for request ${t.method} ${t.url}`),t.request.retryCount===0)return r.log.info(`Retrying after ${e} seconds!`),!0}Qo.OAuthApp.defaults({Octokit:at});const ct=async({filename:e,gistId:t})=>{var i;const{token:r}=await he.get(),s=await new at({auth:r}).request("GET /gists/{gist_id}",{gist_id:t,headers:{"X-GitHub-Api-Version":"2022-11-28"}});return JSON.parse(((i=s.data.files[e])==null?void 0:i.content)||"{}")||{}},Pe="syncDataToGist",tt="loadDataFromOtherDeviceFn",Fr="sync_data.json",Dr=async({data:e,gistId:t,filename:r})=>{const{token:o}=await he.get();if(!o)return;await new at({auth:o}).request("PATCH /gists/{gist_id}",{gist_id:t,description:"An updated gist description",files:{[r]:{content:JSON.stringify({...e},null,2)}},headers:{"X-GitHub-Api-Version":"2022-11-28"}})},Cn=async e=>{const t=qr.getSnapshot().deviceId+"-"+Ae().format("YYYY-MM-DD HH:mm:ss"),{syncGistId:r}=await he.get();if(!r){console.log("syncGistId is empty, skip⏭️⏭️⏭️");return}return await Dr({data:{...e,syncTag:t},filename:Fr,gistId:r})},Un=async()=>{console.log("%c############## 🔺🔺🔺 start syncDataToGistFn ########","color: blue");const e=()=>console.log("%c############## 🔺🔺🔺 end syncDataToGistFn ########","color: blue"),t=await Fe.get();if(console.log("🔺localStorageData.alreadyBackupToGist",t.alreadyBackupToGist),console.log("🔺localStorageData.version",t.version),t.alreadyBackupToGist){console.log("🔺already synced to gist, skip⏭️⏭️⏭️"),e();return}const r=t.version||0,o=await Ye.get().then(i=>i.lastSyncVersion)||0,s=(r>o?r:o)+1;try{await Cn({...jr.omit(t,["redirect"]),version:s}),await Fe.set({version:s,alreadyBackupToGist:!0}),await Ye.set({lastSyncVersion:s}),console.log("🔺🔺🔺 SYNC TO GIST SUCCESS ✅✅✅")}catch(i){console.log("🔺sync TO gist fail # catch ->",i)}e()},Cr=async()=>{console.log("%c############## 🔽🔽🔽 start loadDataFromOtherDeviceFn ########","color: red");const e=()=>console.log("%c############## 🔽🔽🔽 end loadDataFromOtherDeviceFn ########","color: red"),t=await Fe.get(),r=await Ye.get().then(i=>i.lastSyncVersion),{syncGistId:o,token:s}=await he.get();if(!o||!s){console.log("🔽syncGistId is empty, skip⏭️⏭️⏭️"),e();return}if(console.log("🔽syncData.lastSyncVersion",r),console.log("🔽localData.version",t.version),(t.version||0)>=(r||0)){console.log("🔽localData is newer than gistData, skip⏭️⏭️⏭️"),e();return}try{const i=await ct({filename:Fr,gistId:o}),a=r>(i.version||-1)?r:i.version;await Fe.set({...i,version:a,alreadyBackupToGist:!0}),console.log("🔽🔽🔽 SYNC FROM GIST SUCCESS ✅✅✅")}catch(i){console.log("🔽sync FROM gist fail # catch ->",i)}e()},Ge="syncBase64ImageCache",Re="loadBase64ImageCache",xn=async()=>{const e=await Mr(),{syncGistId:t}=await he.get();if(!t)return;console.log("%csyncBase64ImageCacheFn start 🌃🌃🌃","color: #1890ff");const r=await ct({filename:"cacheImgBase64Map.json",gistId:t}),o=he.getSnapshot().faviconSyncList.split(",");let i=Object.values(Fe.getSnapshot().allSpacesMap||{}).reduce((g,h)=>(g.push(...h.tabs),g),[]).filter(g=>g.favIconUrl&&o.find(h=>g.favIconUrl.includes(h)||g.url.includes(h))).map(g=>g.favIconUrl);i=Array.from(new Set(i));const a=Object.keys({...e,...r}).reduce((g,h)=>((o.find(A=>h.includes(A))||i.includes(h))&&(g[h]=e[h]),g),{});if(console.log("needUpdateData",a),Object.keys(r).length&&Object.keys(r).sort().join(",")===Object.keys(a).sort().join(",")){console.log("%cno need to upload cacheImgBase64Map","color: #1890ff");return}await Dr({data:{...a},gistId:t,filename:"cacheImgBase64Map.json"}),console.log("%csyncBase64ImageCacheFn done ✅✅✅","color: #1890ff")},Ur=async()=>{const{syncGistId:e}=await he.get();if(!e)return;console.log("LOAD Base64ImageCacheFn start 🌃🌃🌃");const t=await ct({filename:"cacheImgBase64Map.json",gistId:e});await Br(t),console.log("LOAD Base64ImageCacheFn done ✅✅✅")},In=e=>e*60*1e3,$n=e=>e*1e3,Ln=()=>{setTimeout(()=>{chrome.alarms.create(Pe,{periodInMinutes:.25}).then(()=>{console.log(`create ${Pe} alarm success`)}).catch(e=>{console.log(`create ${Pe} alarm fail`,e)})},$n(10)),setTimeout(()=>{chrome.alarms.create(Ge,{periodInMinutes:5}).then(()=>{console.log(`create ${Ge} alarm success`)}).catch(e=>{console.log(`create ${Ge} alarm fail`,e)})},In(2)),chrome.alarms.create(Re,{periodInMinutes:5}).then(()=>{console.log(`create ${Re} alarm success`)}).catch(e=>{console.log(`create ${Re} alarm fail`,e)}),chrome.alarms.create(tt,{periodInMinutes:.25}).then(()=>{console.log("create saveStoreToSyncStorage alarm success")}).catch(e=>{console.log("create saveStoreToSyncStorage alarm fail",e)})};Ln();Cr();Ur();chrome.alarms.onAlarm.addListener(function(e){e.name===Pe&&(console.log(`执行 ${Pe} 操作`,Ae().format("YYYY-MM-DD HH:mm:ss")),Un()),e.name===tt&&(console.log(`执行 ${tt} 操作`,Ae().format("YYYY-MM-DD HH:mm:ss")),Cr()),e.name===Ge&&(console.log(`执行 ${Ge} 操作`,Ae().format("YYYY-MM-DD HH:mm:ss")),xn()),e.name===Re&&(console.log(`执行 ${Re} 操作`,Ae().format("YYYY-MM-DD HH:mm:ss")),Ur())});console.log("background loaded 2fsxxxxf");chrome.commands.onCommand.addListener(function(e){e==="command1"?(chrome.tabs.query({currentWindow:!0},function(t){t.forEach(r=>{(r.url&&r.url.includes("chrome://newtab")||r.url.includes("edge://newtab"))&&chrome.tabs.remove(r.id)})}),chrome.tabs.query({currentWindow:!0},function(t){const r=t.find(s=>s.active),o=r==null?void 0:r.groupId;o&&chrome.tabGroups.query({},function(s){s.forEach(i=>{i.id!==o&&chrome.tabGroups.update(i.id,{collapsed:!0})})})})):e==="command2"&&chrome.tabs.query({currentWindow:!0},function(t){const r=t.find(o=>o.url&&o.url.includes("/src/pages/newtab/index.html"));r&&r.active||(r?chrome.tabs.update(r.id,{active:!0}):chrome.tabs.create({url:`chrome-extension://${chrome.runtime.id}/src/pages/newtab/index.html`,active:!0}).then(o=>{chrome.tabs.update(o.id,{pinned:!0})}))})});
